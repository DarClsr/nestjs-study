var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Aaa.html",[0,0.111,1,1.973]],["body/classes/Aaa.html",[0,0.169,1,3.505,2,2.058,3,0.247,4,0.216,5,0.216,6,4.904,7,0.247,8,0.017,9,0.016,10,0.016]],["title/controllers/AaaController.html",[11,1.425,12,2.627]],["body/controllers/AaaController.html",[0,0.087,1,1.54,3,0.127,4,0.111,5,0.111,7,0.127,8,0.018,9,0.01,10,0.01,11,1.111,12,3.004,13,1.169,14,2.521,15,1.889,16,0.44,17,1.062,18,1.804,19,2.942,20,2.257,21,2.257,22,2.257,23,2.521,24,3.731,25,2.378,26,3.556,27,1.103,28,2.93,29,1.384,30,0.935,31,0.841,32,1.384,33,1.474,34,2.93,35,2.93,36,2.93,37,1.54,38,1.588,39,3.004,40,2.93,41,2.616,42,1.54,43,3.004,44,2.93,45,1.54,46,4.255,47,3.004,48,2.93,49,0.52,50,2.768,51,2.049,52,1.889,53,2.049,54,2.251,55,2.93,56,0.416,57,3.004,58,2.521,59,1.37,60,2.521,61,2.049,62,2.521,63,1.37,64,2.251,65,2.846,66,2.521,67,1.54,68,3.299,69,1.54,70,2.93,71,2.521,72,2.251,73,1.889,74,2.049,75,1.34,76,2.93,77,2.93,78,2.93,79,2.93,80,2.049,81,2.93,82,2.049,83,2.93,84,2.049,85,2.93]],["title/guards/AaaGuard.html",[86,2.102,87,2.627]],["body/guards/AaaGuard.html",[0,0.127,3,0.185,4,0.162,5,0.162,7,0.185,8,0.018,9,0.013,10,0.013,16,0.642,17,1.38,27,0.791,29,1.057,30,0.714,31,0.642,32,1.057,33,1.057,49,0.489,56,0.608,75,0.961,87,3.905,88,2.561,89,3.678,90,1.337,91,2.344,92,3.946,93,3.592,94,2.561,95,3.262,96,4.276,97,2.764,98,3.598,99,2.933,100,3.077,101,1.796,102,1.033,103,2.393,104,2,105,1.705,106,2.561,107,1.544,108,4.276,109,4.276,110,1.705]],["title/modules/AaaModule.html",[111,0.928,112,2.421]],["body/modules/AaaModule.html",[0,0.122,3,0.178,4,0.156,5,0.156,7,0.178,8,0.018,9,0.013,10,0.013,12,4.264,13,2.17,49,0.511,56,0.584,65,4.14,66,3.536,111,1.507,112,4.685,113,1.82,114,1.922,115,2.159,116,2.159,117,1.922,118,3.018,119,2.693,120,3.536,121,3.536,122,3.536,123,3.536,124,3.881,125,2.858,126,2.159,127,2.159,128,4.11,129,3.805,130,4.179,131,4.11,132,3.536,133,4.11]],["title/injectables/AaaService.html",[65,2.102,102,0.695]],["body/injectables/AaaService.html",[0,0.099,1,3.301,3,0.145,4,0.127,5,0.127,7,0.145,8,0.018,9,0.011,10,0.011,16,0.503,17,1.17,18,1.987,19,3.13,20,2.486,21,2.486,22,2.486,23,4.07,24,3.762,27,1.162,29,1.473,30,0.995,31,0.895,32,1.473,33,1.657,37,2.486,38,1.481,41,2.738,42,2.486,45,2.486,46,4.319,49,0.432,56,0.476,65,2.648,67,1.761,68,3.635,69,1.761,75,1.413,102,0.875,134,1.484,135,2.884,136,3.352,137,3.352,138,3.081,139,3.352,140,3.352,141,3.352,142,4.827,143,2.575,144,1.153,145,2.575,146,2.575]],["title/controllers/AppController.html",[11,1.425,147,2.627]],["body/controllers/AppController.html",[0,0.051,1,1.89,3,0.074,4,0.065,5,0.065,7,0.074,8,0.018,9,0.007,10,0.007,11,1.069,13,0.681,16,0.257,17,0.697,25,2.192,27,1.016,29,0.889,30,0.83,31,0.881,32,0.889,33,1.358,38,1.418,41,2.087,49,0.492,52,2.69,54,1.312,56,0.243,59,0.799,65,1.577,73,2.318,75,1.235,87,1.195,91,1.752,101,0.717,110,1.665,138,1.248,147,1.971,148,1.47,149,3.191,150,2.818,151,4.174,152,4.174,153,3.59,154,2.818,155,4.174,156,2.818,157,2.976,158,1.708,159,1.708,160,1.708,161,4.618,162,2.976,163,1.708,164,2.818,165,5.211,166,1.708,167,4.174,168,4.276,169,3.972,170,1.708,171,4.174,172,4.97,173,2.818,174,4.276,175,1.708,176,4.174,177,3.597,178,1.708,179,2.818,180,4.174,181,1.708,182,1.577,183,1.708,184,1.708,185,1.708,186,1.708,187,1.708,188,1.708,189,1.708,190,1.708,191,2.818,192,1.708,193,1.708,194,1.708,195,1.708,196,2.818,197,1.708,198,1.682,199,1.708,200,1.708,201,1.708,202,2.165,203,1.312,204,1.708,205,4.174,206,2.818,207,3.597,208,4.618,209,1.708,210,1.708,211,1.708,212,1.708,213,2.154,214,1.47,215,1.708,216,1.688,217,1.89,218,1.47,219,1.195,220,1.708,221,0.756,222,1.101,223,1.971,224,1.708,225,1.101,226,1.47,227,1.312,228,1.708,229,1.708,230,1.708,231,1.47,232,1.708,233,1.708,234,3.597,235,4.174,236,3.597,237,2.818,238,2.818,239,1.708,240,1.708,241,4.174,242,1.816,243,1.708,244,1.708,245,3.597,246,1.708,247,3.597,248,1.708,249,1.708,250,1.708,251,1.708,252,1.708,253,1.708,254,1.708,255,1.312,256,1.708,257,1.708,258,1.708,259,1.708,260,1.708,261,1.708,262,1.708]],["title/modules/AppModule.html",[111,0.928,263,2.627]],["body/modules/AppModule.html",[0,0.061,3,0.09,4,0.078,5,0.078,7,0.09,8,0.019,9,0.008,10,0.008,13,1.313,17,0.512,27,0.383,29,0.512,30,0.346,31,0.494,32,0.512,33,0.512,49,0.56,56,0.294,75,0.465,105,0.826,107,1.189,110,1.313,111,1.013,112,3.5,113,0.916,114,0.968,115,1.088,116,1.088,117,0.968,118,2.029,119,1.025,124,3.039,125,1.73,126,1.088,127,1.088,129,2.303,144,1.132,147,2.867,213,3.252,214,1.781,217,2.154,218,1.781,221,1.458,222,1.334,226,1.781,263,4.915,264,1.781,265,1.781,266,1.781,267,3.5,268,3.5,269,3.5,270,3.5,271,3.287,272,2.07,273,3.293,274,2.07,275,4.099,276,2.07,277,2.07,278,1.59,279,3.293,280,2.07,281,2.07,282,2.07,283,2.07,284,1.448,285,2.07,286,2.07,287,1.334,288,2.832,289,1.781,290,1.781,291,1.313,292,2.07,293,2.07,294,1.59,295,0.869,296,1.781,297,2.07,298,2.07,299,0.968,300,1.448,301,2.07,302,1.781,303,1.781,304,2.07,305,2.07,306,2.07,307,2.07,308,2.07,309,2.07,310,2.07,311,4.099,312,2.07,313,2.07,314,2.07,315,3.293,316,3.293,317,2.07,318,2.07,319,1.972,320,2.832,321,3.293,322,2.07,323,3.293,324,2.07,325,2.07,326,2.07,327,2.07,328,2.07,329,2.07,330,2.07,331,1.781,332,2.07,333,2.07,334,1.781,335,2.07,336,1.781,337,2.07,338,1.781,339,2.07,340,1.448,341,2.07,342,2.07,343,2.07,344,2.07,345,1.334,346,2.07,347,2.07,348,1.59,349,2.07,350,1.781,351,2.07,352,2.07,353,2.07,354,2.07,355,2.07,356,2.07,357,2.07,358,2.07,359,1.781,360,2.07,361,3.589,362,4.672,363,2.07,364,1.781,365,2.07,366,1.781,367,2.07,368,2.07,369,2.07,370,2.07,371,2.07,372,2.07]],["title/injectables/AppService.html",[102,0.695,213,2.249]],["body/injectables/AppService.html",[0,0.151,3,0.22,4,0.192,5,0.192,7,0.22,8,0.018,9,0.015,10,0.015,16,0.763,17,1.539,27,0.939,33,1.255,38,1.468,49,0.4,56,0.722,75,1.142,102,1.151,134,2.248,153,6.037,168,4.369,169,4.369,213,3.728,373,4.369,374,5.079]],["title/classes/Bbb.html",[0,0.111,182,2.102]],["body/classes/Bbb.html",[0,0.169,2,2.058,3,0.247,4,0.216,5,0.216,7,0.247,8,0.017,9,0.016,10,0.016,182,3.734,375,4.904]],["title/controllers/BbbController.html",[11,1.425,376,2.627]],["body/controllers/BbbController.html",[0,0.088,3,0.128,4,0.112,5,0.112,7,0.128,8,0.018,9,0.01,10,0.01,11,1.12,13,1.178,15,1.903,16,0.443,17,1.068,18,1.814,19,2.953,20,2.269,21,2.269,22,2.269,25,2.385,26,3.572,27,1.106,29,1.389,30,0.939,31,0.844,32,1.389,33,1.478,37,1.551,38,1.591,39,3.021,41,2.623,42,1.551,43,3.021,45,1.551,47,3.021,49,0.521,50,2.784,51,2.065,52,1.903,53,2.065,54,2.268,56,0.42,57,3.021,58,2.54,59,1.381,60,2.54,61,2.065,62,2.54,63,1.381,64,2.268,67,1.551,69,1.551,71,2.54,72,2.268,73,1.903,74,2.065,75,1.344,80,2.065,82,2.065,84,2.065,182,1.652,376,3.021,377,2.54,378,2.54,379,3.741,380,2.952,381,2.952,382,2.952,383,2.952,384,2.952,385,4.264,386,2.952,387,3.058,388,2.54,389,3.318,390,2.952,391,2.952,392,2.952,393,2.952,394,2.952,395,2.952,396,2.952]],["title/modules/BbbModule.html",[111,0.928,267,2.421]],["body/modules/BbbModule.html",[0,0.129,3,0.189,4,0.165,5,0.165,7,0.189,8,0.018,9,0.013,10,0.013,13,2.254,49,0.522,56,0.619,111,1.55,113,1.929,114,2.037,115,2.289,116,2.289,117,2.037,118,3.105,119,2.156,124,3.944,125,2.969,126,2.289,127,2.289,129,3.952,132,3.747,267,4.687,376,4.387,387,4.22,388,3.747,397,3.747,398,4.356,399,3.747,400,4.356,401,4.356]],["title/injectables/BbbService.html",[102,0.695,387,2.249]],["body/injectables/BbbService.html",[0,0.099,3,0.145,4,0.127,5,0.127,7,0.145,8,0.018,9,0.011,10,0.011,16,0.503,17,1.17,18,1.987,19,3.13,20,2.486,21,2.486,22,2.486,27,1.162,29,1.473,30,0.995,31,0.895,32,1.473,33,1.657,37,2.486,38,1.481,41,2.738,42,2.486,45,2.486,49,0.432,56,0.476,67,1.761,69,1.761,75,1.413,102,0.875,134,1.484,138,3.081,142,4.827,143,2.575,144,1.153,145,2.575,146,2.575,182,3.516,378,4.07,379,3.762,385,4.319,387,2.833,389,3.635,402,2.884,403,3.352,404,3.352,405,3.352,406,3.352,407,3.352]],["title/classes/CreateAaaDto.html",[0,0.111,24,2.249]],["body/classes/CreateAaaDto.html",[0,0.168,2,2.048,3,0.246,4,0.215,5,0.215,7,0.246,8,0.017,9,0.016,10,0.016,24,3.984,408,4.88,409,4.358]],["title/classes/CreateBbbDto.html",[0,0.111,379,2.249]],["body/classes/CreateBbbDto.html",[0,0.168,2,2.048,3,0.246,4,0.215,5,0.215,7,0.246,8,0.017,9,0.016,10,0.016,379,3.984,410,4.88,411,4.358]],["title/classes/CreatePersonDto.html",[0,0.111,412,2.249]],["body/classes/CreatePersonDto.html",[0,0.168,2,2.048,3,0.246,4,0.215,5,0.215,7,0.246,8,0.017,9,0.016,10,0.016,412,3.984,413,4.88,414,4.358]],["title/classes/CreateUserDto.html",[0,0.111,415,1.973]],["body/classes/CreateUserDto.html",[0,0.195,2,1.538,3,0.185,4,0.161,5,0.161,7,0.269,8,0.018,9,0.013,10,0.013,16,0.64,27,0.788,30,0.93,31,0.64,38,1.005,49,0.335,90,1.741,319,3.716,415,2.926,416,3.896,417,2.746,418,4.26,419,5.246,420,4.767,421,3.335,422,3.273,423,2.98,424,4,425,2.384,426,4.279,427,3.59,428,3.273,429,3.273,430,3.273,431,3.273,432,3.273,433,3.896,434,2.384,435,4.279,436,4.279]],["title/injectables/LogMiddleware.html",[102,0.695,284,2.627]],["body/injectables/LogMiddleware.html",[0,0.132,3,0.193,4,0.169,5,0.169,7,0.193,8,0.018,9,0.014,10,0.014,16,0.669,17,1.417,27,0.824,29,1.101,30,0.744,31,0.669,32,1.101,33,1.101,49,0.451,56,0.633,102,1.061,105,1.777,134,1.973,278,4.871,284,4.011,437,3.833,438,5.734,439,5.734,440,3.13,441,5.455,442,5.455,443,5.759,444,4.456,445,4.456,446,3.423,447,5.734,448,1.973,449,4.456,450,4.456]],["title/classes/LoginDto.html",[0,0.111,434,2.102]],["body/classes/LoginDto.html",[0,0.189,2,1.424,3,0.171,4,0.149,5,0.149,7,0.259,8,0.018,9,0.013,10,0.013,16,0.592,25,2.11,27,0.979,30,0.884,31,0.795,38,1.248,49,0.31,90,1.654,319,3.986,340,3.701,415,2.072,416,4.177,417,2.541,419,5.114,420,4.588,421,3.168,422,3.029,423,2.758,424,3.849,425,2.207,426,4.065,427,3.41,428,3.029,429,3.029,430,3.029,431,3.029,432,3.029,433,3.701,434,2.961,435,4.065,436,4.065,451,3.943,452,5.291,453,5.291,454,3.029,455,3.943,456,3.943,457,3.943]],["title/guards/LoginGuard.html",[59,1.756,86,2.102]],["body/guards/LoginGuard.html",[0,0.105,3,0.153,4,0.134,5,0.134,7,0.153,8,0.018,9,0.012,10,0.012,16,0.529,17,1.211,27,0.652,29,0.871,30,0.589,31,0.529,32,0.871,33,0.871,49,0.522,56,0.501,59,2.292,75,0.793,88,2.111,90,1.102,91,2.557,92,3.647,93,3.363,94,2.111,95,3.015,97,2.426,98,3.159,99,2.575,100,2.789,101,1.48,102,0.907,103,1.973,104,1.648,105,1.406,106,2.111,107,2.199,110,1.406,111,0.871,157,2.272,291,1.406,299,1.648,300,2.465,440,2.848,448,2.17,458,2.708,459,3.925,460,3.525,461,1.852,462,2.465,463,2.111,464,1.648,465,3.032,466,3.032,467,3.032,468,1.973,469,3.032,470,3.032,471,3.032,472,2.272,473,2.708,474,3.032,475,2.708,476,3.032,477,3.032,478,3.032,479,3.032]],["title/guards/LoginGuard-1.html",[59,1.468,86,1.757,242,2.023]],["body/guards/LoginGuard-1.html",[0,0.118,3,0.172,4,0.15,5,0.15,7,0.172,8,0.018,9,0.013,10,0.013,16,0.596,17,1.314,27,0.734,29,0.981,30,0.888,31,0.596,32,0.981,33,0.981,38,0.936,49,0.504,56,0.564,59,2.485,75,0.893,88,2.377,93,3.506,94,2.377,95,3.168,97,2.631,98,3.426,99,2.793,100,2.966,101,1.667,102,0.983,104,1.856,105,1.583,107,1.433,110,1.583,111,0.981,144,1.365,198,2.485,291,1.583,440,2.802,448,2.353,459,2.559,461,2.793,462,2.777,463,2.377,464,1.856,468,2.222,480,3.049,481,3.97,482,3.415,483,1.856]],["title/controllers/MapController.html",[11,1.425,484,2.627]],["body/controllers/MapController.html",[0,0.081,3,0.119,4,0.104,5,0.104,7,0.119,8,0.018,9,0.01,10,0.01,11,1.038,13,1.092,15,1.764,16,0.411,17,1.01,25,2.16,27,1.002,29,1.208,30,1.015,31,0.613,32,1.208,33,1.339,38,1.152,49,0.385,56,0.389,75,1.218,91,1.149,101,1.149,138,3.153,144,1.863,149,3.427,162,3.491,203,3.137,255,2.103,319,1.639,448,1.212,483,2.533,484,2.857,485,2.355,486,2.737,487,4.885,488,5.417,489,3.513,490,4.885,491,2.737,492,6.736,493,6.736,494,4.084,495,2.737,496,4.66,497,4.084,498,2.737,499,2.737,500,4.084,501,2.737,502,2.737,503,4.084,504,2.737,505,4.66,506,4.161,507,2.418,508,2.737,509,2.737,510,1.914,511,2.737,512,4.084,513,4.084,514,2.103,515,2.567,516,2.737,517,2.355,518,2.355,519,2.737,520,2.737,521,2.355,522,2.737,523,2.737,524,2.737,525,2.737,526,2.737,527,2.355]],["title/modules/MapModule.html",[111,0.928,268,2.421]],["body/modules/MapModule.html",[0,0.138,3,0.202,4,0.176,5,0.176,7,0.202,8,0.018,9,0.014,10,0.014,13,2.351,49,0.509,56,0.661,111,1.599,113,2.06,114,2.175,115,2.444,116,2.444,117,2.175,118,3.203,119,2.303,125,3.097,126,2.444,127,2.444,268,4.621,484,4.525,528,4.002,529,4.002,530,4.621,531,4.652,532,4.652,533,4.652]],["title/injectables/MapService.html",[102,0.695,530,2.421]],["body/injectables/MapService.html",[0,0.164,3,0.24,4,0.21,5,0.21,7,0.24,8,0.017,9,0.016,10,0.016,49,0.436,56,0.787,102,1.213,134,2.452,530,4.227,534,4.764]],["title/classes/MyLogger.html",[0,0.111,216,2.249]],["body/classes/MyLogger.html",[0,0.092,2,1.123,3,0.135,4,0.118,5,0.118,7,0.135,8,0.018,9,0.011,10,0.011,16,0.467,17,1.109,27,1.129,29,1.423,30,0.962,31,0.865,32,1.423,33,1.3,38,1.742,49,0.414,56,0.442,90,1.402,91,2.209,97,3.516,105,1.789,107,1.899,202,4.69,216,2.686,227,2.389,278,4.041,287,2.005,319,3.809,320,5.472,331,3.859,535,2.676,536,5.261,537,4.486,538,4.486,539,4.486,540,4.486,541,3.859,542,4.486,543,3.11,544,4.486,545,3.11,546,4.486,547,3.11,548,3.11,549,4.526,550,3.11,551,3.11,552,5.261,553,5.261,554,5.261,555,5.261,556,5.261]],["title/entities/Permission.html",[295,1.577,557,2.102]],["body/entities/Permission.html",[0,0.111,3,0.163,4,0.142,5,0.142,7,0.163,8,0.018,9,0.012,10,0.012,16,0.563,25,2.61,27,1.211,30,0.972,31,0.983,38,1.475,41,2.445,49,0.295,90,1.6,110,1.497,138,2.265,295,2.148,345,2.418,421,3.745,557,2.864,558,3.228,559,4.473,560,5.823,561,4.473,562,4.804,563,3.228,564,3.752,565,3.931,566,5.38,567,3.752,568,3.752,569,4.473,570,3.752,571,3.752,572,3.228,573,3.752,574,4.473,575,3.931,576,3.931,577,2.418,578,4.804,579,3.752]],["title/guards/PermissionGuard.html",[63,1.756,86,2.102]],["body/guards/PermissionGuard.html",[0,0.098,3,0.144,4,0.126,5,0.126,7,0.144,8,0.018,9,0.011,10,0.011,16,0.498,17,1.16,27,0.613,29,0.819,30,0.554,31,0.498,32,0.819,33,0.819,49,0.537,56,0.471,63,2.195,75,1.333,88,1.984,90,1.036,91,2.728,92,3.549,93,3.114,94,2.811,95,2.934,97,1.64,99,2.466,100,1.64,101,1.392,102,0.868,103,1.855,104,1.55,105,1.322,106,1.984,107,2.259,110,2.174,144,1.14,149,2.698,221,2.624,222,2.136,295,2.288,296,2.851,299,1.55,300,2.318,440,2.548,448,1.467,461,2.466,468,1.855,472,2.136,473,2.546,483,1.55,507,2.934,510,2.318,515,1.741,580,2.851,581,3.314,582,2.546,583,2.546,584,3.314,585,2.546,586,3.314,587,3.314,588,2.136,589,3.314,590,3.314,591,3.314,592,3.314,593,3.314,594,3.314,595,2.851,596,3.314,597,3.314,598,3.314,599,3.314]],["title/guards/PermissionGuard-1.html",[63,1.468,86,1.757,242,2.023]],["body/guards/PermissionGuard-1.html",[0,0.094,3,0.138,4,0.12,5,0.12,7,0.138,8,0.018,9,0.011,10,0.011,16,0.477,17,1.126,27,0.588,29,0.786,30,0.761,31,0.477,32,0.786,33,0.786,38,0.749,49,0.504,56,0.452,63,2.13,75,0.715,88,1.903,90,0.994,91,2.69,92,3.483,93,3.056,94,2.728,95,2.879,97,1.573,99,2.394,100,1.573,101,1.335,102,0.843,103,1.779,104,1.486,105,1.268,106,1.903,107,2.1,110,1.268,111,0.786,144,1.567,149,2.636,198,2.49,221,2.575,222,2.048,291,2.124,295,1.913,427,2.048,440,2.49,448,2.017,461,2.798,463,1.903,464,1.486,468,1.779,472,2.048,483,2.13,507,2.879,510,2.223,515,1.67,582,2.441,583,2.441,600,2.441,601,3.178,602,2.734,603,3.432,604,2.734,605,2.734,606,2.734,607,2.734,608,2.734,609,2.734,610,2.734,611,2.734,612,2.734,613,2.734,614,2.734,615,2.734,616,2.734]],["title/classes/Person.html",[0,0.111,617,2.421]],["body/classes/Person.html",[0,0.169,2,2.058,3,0.247,4,0.216,5,0.216,7,0.247,8,0.017,9,0.016,10,0.016,617,4.3,618,4.904]],["title/controllers/PersonController.html",[11,1.425,619,2.627]],["body/controllers/PersonController.html",[0,0.094,3,0.137,4,0.119,5,0.119,7,0.137,8,0.018,9,0.011,10,0.011,11,1.196,13,1.257,15,2.032,16,0.473,17,1.12,18,1.902,19,3.045,20,2.38,21,2.38,22,2.38,25,2.448,26,3.708,27,1.135,29,1.432,30,0.968,31,0.87,32,1.432,33,1.517,37,1.656,38,1.617,39,3.168,41,2.683,42,1.656,43,3.168,45,1.656,47,3.168,49,0.456,50,2.919,51,2.205,52,2.032,53,2.205,56,0.448,67,1.656,69,1.656,72,2.422,73,2.032,74,2.205,75,1.38,80,2.205,82,2.205,84,2.205,217,2.785,412,3.826,617,2.032,619,3.168,620,2.712,621,2.712,622,3.152,623,3.152,624,3.152,625,3.152,626,4.341,627,3.152,628,2.712,629,3.479,630,3.152,631,3.152,632,3.152,633,3.152,634,3.152,635,3.152]],["title/modules/PersonModule.html",[111,0.928,269,2.421]],["body/modules/PersonModule.html",[0,0.138,3,0.202,4,0.176,5,0.176,7,0.202,8,0.018,9,0.014,10,0.014,13,2.351,49,0.509,56,0.661,111,1.599,113,2.06,114,2.175,115,2.444,116,2.444,117,2.175,118,3.203,119,2.303,125,3.097,126,2.444,127,2.444,217,3.767,269,4.621,619,4.525,628,4.002,636,4.002,637,4.002,638,4.652,639,4.652]],["title/injectables/PersonService.html",[102,0.695,217,1.973]],["body/injectables/PersonService.html",[0,0.099,3,0.145,4,0.127,5,0.127,7,0.145,8,0.018,9,0.011,10,0.011,16,0.503,17,1.17,18,1.987,19,3.13,20,2.486,21,2.486,22,2.486,27,1.162,29,1.473,30,0.995,31,0.895,32,1.473,33,1.657,37,2.486,38,1.481,41,2.738,42,2.486,45,2.486,49,0.432,56,0.476,67,1.761,69,1.761,75,1.413,102,0.875,134,1.484,138,3.081,142,4.827,143,2.575,144,1.153,145,2.575,146,2.575,217,2.486,412,3.762,617,4.05,621,4.07,626,4.319,629,3.635,640,2.884,641,3.352,642,3.352,643,3.352,644,3.352,645,3.352]],["title/injectables/QuerypageInterceptor.html",[102,0.695,219,2.627]],["body/injectables/QuerypageInterceptor.html",[0,0.125,3,0.182,4,0.159,5,0.159,7,0.182,8,0.018,9,0.013,10,0.013,11,1.593,16,0.631,17,1.364,27,0.777,29,1.038,30,0.701,31,0.631,32,1.038,33,1.038,49,0.434,56,0.597,75,0.944,86,2.35,95,3.239,97,2.078,100,3.05,102,1.02,104,1.963,105,1.675,134,1.859,219,3.859,443,5.3,646,3.612,647,5.517,648,5.517,649,6.544,650,4.199,651,5.517,652,5.517,653,4.199,654,4.199,655,3.226,656,4.199,657,4.199,658,4.199,659,4.199,660,4.199,661,4.199,662,4.199,663,4.199]],["title/modules/RedisModule.html",[111,0.928,270,2.421]],["body/modules/RedisModule.html",[0,0.121,3,0.178,4,0.155,5,0.155,7,0.178,8,0.018,9,0.013,10,0.013,49,0.479,56,0.582,75,0.921,107,1.479,111,1.504,113,1.813,114,1.915,115,2.152,116,2.152,117,1.915,118,3.013,119,2.686,125,2.851,126,2.152,127,2.152,130,4.169,149,2.027,270,4.556,334,3.523,336,3.523,361,3.146,507,3.66,515,2.152,603,2.64,664,3.523,665,3.523,666,3.523,667,4.096,668,5.427,669,4.096,670,4.096,671,4.096,672,5.427,673,4.096,674,4.096,675,4.096,676,4.096,677,4.096]],["title/injectables/RedisService.html",[102,0.695,507,1.859]],["body/injectables/RedisService.html",[0,0.077,3,0.113,4,0.099,5,0.099,7,0.113,8,0.018,9,0.009,10,0.009,16,0.391,17,0.972,25,1.038,27,1.145,29,1.474,30,0.996,31,0.93,32,1.474,33,1.474,38,1.677,49,0.31,56,0.37,75,1.188,90,1.229,91,1.99,101,1.093,102,0.727,107,1.907,134,1.152,138,3.032,144,0.895,149,3.52,162,3.655,242,2.534,454,1.999,483,1.217,489,3.383,496,4.544,505,3.383,506,3.021,507,1.946,515,1.367,527,3.383,595,4.077,603,1.677,678,2.239,679,4.74,680,3.932,681,3.932,682,3.932,683,3.932,684,3.932,685,2.603,686,3.932,687,2.603,688,5.964,689,2.603,690,5.282,691,3.383,692,2.603,693,2.239,694,1.999,695,2.603,696,2.603,697,2.603,698,2.603,699,2.603,700,2.603,701,2.603,702,2.603,703,6.376,704,3.932,705,2.603,706,4.74,707,3.932,708,2.603,709,2.603,710,2.603,711,2.603,712,2.603,713,2.603,714,2.603,715,2.603,716,2.603,717,3.932,718,2.603,719,3.932,720,3.932,721,3.932,722,2.603,723,2.603,724,2.603,725,2.603,726,2.603]],["title/classes/RegisterDto.html",[0,0.111,425,2.102]],["body/classes/RegisterDto.html",[0,0.189,2,1.414,3,0.17,4,0.148,5,0.148,7,0.258,8,0.018,9,0.012,10,0.012,16,0.588,25,2.101,27,0.974,30,0.88,31,0.791,38,1.242,49,0.308,90,1.647,319,3.811,340,3.684,415,2.058,416,4.163,417,2.524,419,5.102,420,4.572,421,3.154,422,3.008,423,2.739,424,3.836,425,2.948,426,4.046,427,3.836,428,3.008,429,4.046,430,4.046,431,4.046,432,4.046,433,3.684,434,2.192,435,4.046,436,4.046,727,5.267,728,3.916,729,3.916,730,3.916]],["title/interfaces/Request.html",[440,1.756,464,1.756]],["body/interfaces/Request.html",[0,0.11,3,0.161,4,0.14,5,0.14,7,0.161,8,0.018,9,0.012,10,0.012,16,0.556,31,0.869,49,0.53,56,0.527,59,1.732,75,0.833,90,1.586,91,2.13,92,3.463,93,3.039,95,2.511,97,1.834,98,2.388,99,1.946,100,2.511,101,1.555,102,0.938,103,2.073,104,1.732,105,1.477,106,2.218,107,2.246,110,1.477,111,0.916,157,2.388,291,2.481,299,1.732,300,2.591,440,3.047,448,2.245,458,2.846,459,3.728,461,1.946,462,2.591,463,2.218,464,1.732,465,3.187,466,3.187,467,3.187,468,2.073,469,3.187,470,3.187,471,3.187,472,2.388,473,2.846,474,3.187,475,2.846,476,3.187,477,3.187,478,3.187,479,3.187,731,2.591,732,3.896]],["title/entities/Role.html",[299,1.756,557,2.102]],["body/entities/Role.html",[0,0.114,3,0.167,4,0.146,5,0.146,7,0.167,8,0.018,9,0.012,10,0.012,16,0.578,25,2.634,27,1.222,30,0.986,31,0.992,38,0.908,41,2.187,49,0.41,90,1.628,138,1.705,295,2.655,299,2.435,345,2.482,421,3.119,424,2.482,557,2.915,559,4.533,561,4.533,562,4.856,565,2.959,569,4.533,574,4.001,575,4.533,576,4.533,577,2.482,578,2.959,588,3.803,733,3.313,734,3.852,735,3.852,736,5.208,737,3.852,738,3.313,739,5.208,740,3.852,741,3.852,742,4.48,743,4.48,744,3.313,745,3.313]],["title/interfaces/Session.html",[198,1.756,464,1.756]],["body/interfaces/Session.html",[0,0.122,3,0.179,4,0.156,5,0.156,7,0.179,8,0.018,9,0.013,10,0.013,16,0.619,30,0.689,31,0.917,38,0.972,49,0.511,56,0.586,59,1.929,75,0.927,90,1.705,93,3.209,95,2.699,97,2.042,98,2.658,99,2.167,100,2.699,101,1.732,102,1.009,104,1.929,105,1.645,107,1.489,110,1.645,111,1.02,144,1.419,198,2.856,291,2.592,440,2.856,448,2.414,459,2.658,461,2.865,462,2.885,463,2.47,464,1.929,468,2.308,480,3.168,482,3.548,483,1.929,731,2.885,732,4.188]],["title/interfaces/Session-1.html",[198,1.468,242,2.023,464,1.468]],["body/interfaces/Session-1.html",[0,0.099,3,0.144,4,0.126,5,0.126,7,0.144,8,0.019,9,0.011,10,0.011,16,0.499,30,0.555,31,0.82,38,0.784,49,0.512,56,0.472,63,1.554,75,0.747,90,1.47,91,2.292,92,3.269,93,2.471,94,1.99,95,2.328,99,1.746,100,1.645,101,1.396,102,0.87,103,1.86,104,1.554,105,1.326,106,1.99,107,2.143,110,1.326,111,0.822,144,1.618,149,1.645,198,2.775,221,2.416,222,2.142,291,2.594,295,1.975,427,2.142,440,2.552,448,2.082,461,2.868,463,1.99,464,1.554,468,1.86,472,2.142,483,2.199,507,2.702,510,2.325,515,1.746,582,2.553,583,2.553,600,2.553,602,2.859,603,3.518,604,2.859,605,2.859,606,2.859,607,2.859,608,2.859,609,2.859,610,2.859,611,2.859,612,2.859,613,2.859,614,2.859,615,2.859,616,2.859,731,2.325,732,3.613]],["title/classes/UpdateAaaDto.html",[0,0.111,46,2.421]],["body/classes/UpdateAaaDto.html",[0,0.156,2,1.9,3,0.228,4,0.199,5,0.199,7,0.228,8,0.018,9,0.015,10,0.015,18,2.21,24,3.151,46,4.1,49,0.501,68,4.042,409,4.042,746,4.527,747,4.449,748,6.361,749,3.681,750,3.392,751,3.392]],["title/classes/UpdateBbbDto.html",[0,0.111,385,2.421]],["body/classes/UpdateBbbDto.html",[0,0.156,2,1.9,3,0.228,4,0.199,5,0.199,7,0.228,8,0.018,9,0.015,10,0.015,18,2.21,49,0.501,379,3.151,385,4.1,389,4.042,411,4.042,747,4.449,749,3.681,750,3.392,751,3.392,752,4.527,753,6.361]],["title/classes/UpdatePersonDto.html",[0,0.111,626,2.421]],["body/classes/UpdatePersonDto.html",[0,0.156,2,1.9,3,0.228,4,0.199,5,0.199,7,0.228,8,0.018,9,0.015,10,0.015,18,2.21,49,0.501,412,3.151,414,4.042,626,4.1,629,4.042,747,4.449,749,3.681,750,3.392,751,3.392,754,4.527,755,6.361]],["title/classes/UpdateUserDto.html",[0,0.111,756,2.421]],["body/classes/UpdateUserDto.html",[0,0.156,2,1.9,3,0.228,4,0.199,5,0.199,7,0.228,8,0.018,9,0.015,10,0.015,18,2.21,49,0.501,415,2.765,417,3.392,747,4.449,749,3.681,750,3.392,751,3.392,756,4.1,757,4.527,758,6.361,759,4.042]],["title/entities/User.html",[291,1.498,557,2.102]],["body/entities/User.html",[0,0.097,3,0.142,4,0.124,5,0.124,7,0.142,8,0.018,9,0.011,10,0.011,16,0.491,25,2.653,27,1.231,30,0.984,31,0.999,38,1.096,41,1.951,49,0.426,90,1.453,138,1.447,291,1.853,295,1.951,299,2.754,340,3.25,345,2.106,421,2.783,424,2.106,433,2.285,557,2.601,559,4.154,561,4.154,562,4.524,563,2.811,565,3.57,566,3.997,569,4.154,572,2.811,574,4.154,575,4.154,576,4.154,577,2.106,578,4.524,585,4.154,588,2.995,738,3.997,742,4.652,743,3.997,744,2.811,745,2.811,760,2.811,761,3.268,762,3.268,763,3.268,764,3.268,765,4.647,766,3.268,767,4.647,768,3.268,769,3.268,770,3.268,771,4.647,772,3.268,773,3.268]],["title/controllers/UserController.html",[11,1.425,774,2.627]],["body/controllers/UserController.html",[0,0.056,3,0.082,4,0.072,5,0.072,7,0.082,8,0.018,9,0.007,10,0.007,11,0.716,13,0.753,15,1.217,16,0.284,17,0.756,18,1.284,19,2.329,20,1.607,21,1.607,22,1.607,25,2.419,26,2.696,27,1.122,29,1.412,30,0.986,31,0.858,32,1.412,33,1.499,37,0.992,38,1.463,39,2.139,41,2.188,42,0.992,43,2.139,45,0.992,47,2.139,49,0.41,50,3.138,51,1.321,52,1.217,53,1.321,56,0.268,67,0.992,69,0.992,73,1.217,74,1.321,75,1.364,80,1.321,82,1.321,84,1.321,91,1.284,107,2.063,144,0.65,149,3.27,162,3.138,198,2.072,203,1.451,221,1.707,227,1.451,255,1.451,291,0.753,294,1.451,338,2.631,359,3.812,415,2.738,425,2.158,434,2.725,441,3.316,442,3.316,448,0.836,459,1.217,461,0.992,475,1.451,483,0.883,514,1.451,515,1.607,756,3.683,759,2.35,774,2.139,775,1.625,776,4.869,777,3.059,778,3.855,779,2.631,780,3.059,781,1.625,782,1.889,783,1.889,784,1.889,785,1.889,786,1.889,787,1.889,788,1.889,789,1.889,790,1.889,791,1.889,792,1.889,793,1.625,794,1.889,795,1.889,796,1.889,797,1.889,798,1.889,799,1.889,800,1.889,801,1.889,802,1.625,803,1.889,804,1.889,805,1.889,806,1.889,807,1.889,808,1.889,809,3.855,810,3.059,811,4.869,812,4.432,813,4.432,814,4.432,815,3.855,816,3.059,817,4.432,818,3.059,819,1.889,820,1.889,821,1.889,822,1.889,823,1.889,824,1.889,825,1.889,826,1.889,827,1.889,828,1.889,829,1.889,830,1.889,831,1.889,832,1.889,833,1.889,834,1.889,835,1.889,836,1.889,837,1.889,838,1.889,839,1.889,840,1.889,841,1.889,842,1.889,843,1.889,844,1.889]],["title/modules/UserModule.html",[111,0.928,124,2.102]],["body/modules/UserModule.html",[0,0.115,3,0.169,4,0.147,5,0.147,7,0.169,8,0.018,9,0.012,10,0.012,13,2.091,49,0.558,56,0.553,63,3.192,64,2.988,111,1.466,113,1.722,114,1.819,115,2.044,116,2.044,117,1.819,118,2.936,119,2.595,124,3.971,125,2.755,126,2.044,127,2.044,129,2.721,221,3.217,289,3.346,291,2.091,295,2.202,299,2.452,774,4.149,802,3.346,845,3.346,846,3.346,847,3.346,848,3.89,849,3.89,850,3.89,851,3.346,852,3.346,853,3.346,854,3.89,855,3.89,856,3.89]],["title/injectables/UserService.html",[102,0.695,221,1.663]],["body/injectables/UserService.html",[0,0.039,1,0.699,3,0.058,4,0.05,5,0.05,7,0.058,8,0.018,9,0.005,10,0.005,16,0.2,17,0.565,18,0.959,19,1.869,20,1.2,21,1.2,22,1.2,25,1.597,27,1.131,29,1.219,30,0.968,31,0.85,32,1.219,33,1.363,37,1.2,38,0.707,41,1.835,42,1.2,45,1.2,49,0.456,50,1.472,56,0.189,67,0.699,69,0.699,75,1.24,90,0.714,91,1.26,101,0.559,102,0.423,107,2.239,110,1.197,134,0.589,138,2.282,144,2.103,149,3.109,157,1.472,162,2.293,182,0.745,202,3.357,216,0.797,221,1.328,225,0.858,231,1.965,287,0.858,291,2.358,295,1.963,299,1.403,415,2.104,425,1.991,434,1.991,446,1.023,483,1.403,514,1.023,515,2.897,517,1.145,518,1.145,521,2.581,577,0.858,585,2.305,588,0.858,756,3.179,759,1.755,779,1.965,781,1.965,793,1.965,851,1.145,852,1.145,853,1.145,857,1.023,858,3,859,4.434,860,3,861,3,862,3,863,2.284,864,2.284,865,3.558,866,3.558,867,1.331,868,1.331,869,2.284,870,1.331,871,1.331,872,2.284,873,1.331,874,1.331,875,1.331,876,2.284,877,1.331,878,1.331,879,1.331,880,1.331,881,1.331,882,3,883,3,884,1.331,885,4.021,886,2.284,887,1.331,888,2.284,889,1.331,890,2.284,891,1.331,892,3.558,893,1.331,894,1.331,895,1.331,896,2.284,897,1.145,898,1.331,899,1.145,900,1.331,901,1.331,902,1.331,903,1.331,904,1.331,905,2.284,906,1.331,907,3,908,1.331,909,1.331,910,3,911,1.331,912,1.331,913,1.331,914,3,915,1.331,916,1.331,917,2.284,918,2.284,919,2.284,920,2.284,921,2.284,922,1.331,923,3,924,1.331,925,3,926,1.331,927,1.331,928,3,929,1.331,930,1.331,931,1.331,932,3,933,1.331,934,1.331,935,3.558,936,2.284,937,2.284,938,1.331,939,1.331,940,2.284,941,3,942,1.331,943,1.331,944,1.331,945,2.284,946,3.558,947,1.331,948,1.331,949,1.331,950,1.331,951,1.331,952,1.331,953,1.331,954,2.284,955,1.331,956,1.331,957,1.331,958,1.331,959,3.558,960,1.331,961,1.331,962,3,963,1.331,964,1.331,965,1.331,966,1.331,967,3,968,1.331,969,2.284,970,1.331,971,1.331,972,1.331,973,1.331,974,1.331]],["title/injectables/ValidatePipe.html",[102,0.695,223,2.627]],["body/injectables/ValidatePipe.html",[0,0.129,3,0.189,4,0.165,5,0.165,7,0.189,8,0.018,9,0.013,10,0.013,16,0.654,17,1.397,27,0.806,29,1.077,30,0.728,31,0.654,32,1.077,33,1.077,49,0.343,56,0.619,75,0.979,102,1.045,105,1.737,134,1.929,138,2.502,144,1.498,223,3.952,348,4.818,483,2.037,506,3.346,655,4.818,694,5.099,975,3.747,976,5.651,977,5.651,978,6.637,979,4.356,980,5.651,981,4.356,982,4.356,983,3.747,984,4.356]],["title/modules/WinstonModule.html",[111,0.928,271,2.421]],["body/modules/WinstonModule.html",[0,0.125,3,0.183,4,0.16,5,0.16,7,0.24,8,0.018,9,0.013,10,0.013,17,1.042,27,0.779,29,1.042,30,0.704,31,0.633,32,1.042,33,1.042,49,0.486,56,0.599,75,0.947,107,1.521,111,1.62,113,1.866,118,2.737,119,2.737,130,4.248,144,1.449,216,2.523,225,3.978,271,4.224,287,2.716,361,3.237,366,3.625,541,3.625,859,3.625,897,3.625,983,3.625,985,3.237,986,5.53,987,4.214,988,4.214,989,6.173,990,4.214,991,3.625,992,4.214,993,4.214]],["title/coverage.html",[994,3.933]],["body/coverage.html",[0,0.203,1,1.911,5,0.089,6,2.022,8,0.018,9,0.009,10,0.009,11,2.173,12,1.644,14,2.022,24,1.407,31,0.353,46,1.515,57,1.644,59,1.701,61,1.644,63,1.701,65,1.315,86,3.032,87,1.644,89,2.022,102,1.197,117,1.099,135,2.022,144,0.808,147,1.644,148,2.022,182,1.315,198,1.701,213,1.407,216,1.407,217,1.235,219,1.644,221,1.04,223,1.644,225,1.515,284,1.644,291,0.937,295,0.987,299,1.099,373,2.022,375,2.022,376,1.644,377,2.022,379,1.407,385,1.515,387,1.407,402,2.022,408,2.022,409,2.794,410,2.022,411,2.794,412,1.407,413,2.022,414,2.794,415,1.235,416,3.112,417,3.228,425,1.315,434,1.315,437,2.022,440,1.099,446,2.794,454,5.874,458,2.794,464,2.081,480,2.794,484,1.644,485,2.022,507,1.163,530,1.515,534,2.022,535,2.022,557,2.49,558,2.022,580,2.022,600,2.794,617,1.515,618,2.022,619,1.644,620,2.022,626,1.515,640,2.022,646,2.022,678,2.022,733,2.022,746,2.022,752,2.022,754,2.022,756,1.515,757,2.022,760,2.022,774,1.644,775,2.022,857,2.794,975,2.022,985,1.805,994,1.805,995,2.35,996,2.35,997,2.35,998,5.974,999,2.022,1000,5.009,1001,7.173,1002,4.45,1003,2.35,1004,6.336,1005,2.022,1006,2.35,1007,2.022,1008,4.45,1009,2.022,1010,2.35,1011,2.35,1012,2.35,1013,2.022,1014,2.35,1015,2.35]],["title/dependencies.html",[114,2.111,1016,2.7]],["body/dependencies.html",[0,0.167,8,0.018,9,0.013,10,0.013,56,0.617,103,2.429,104,2.029,114,2.029,198,2.636,287,2.797,288,3.733,290,3.733,294,3.334,302,3.733,350,3.733,423,3.035,448,2.496,549,3.733,577,2.797,603,2.797,655,3.334,750,2.797,751,2.797,1017,4.34,1018,4.34,1019,6.261,1020,4.34,1021,4.34,1022,4.34,1023,4.34,1024,4.34,1025,4.34,1026,4.34,1027,4.34,1028,4.34,1029,4.34,1030,4.34,1031,4.34,1032,4.34,1033,4.34,1034,4.34,1035,4.34,1036,4.34,1037,4.34,1038,4.34,1039,4.34,1040,4.34,1041,4.34,1042,4.34]],["title/miscellaneous/functions.html",[1043,2.196,1044,3.884]],["body/miscellaneous/functions.html",[8,0.016,9,0.015,10,0.015,16,0.824,29,1.356,30,0.916,32,1.356,117,3.255,857,4.214,899,4.719,1007,4.719,1013,5.61,1043,3.837,1044,4.719,1045,5.486,1046,5.486,1047,5.486]],["title/index.html",[16,0.471,1048,3.139,1049,3.139]],["body/index.html",[4,0.152,8,0.018,9,0.013,10,0.013,165,3.092,174,5.191,303,3.462,364,5.191,691,3.462,885,3.462,994,3.092,1050,4.025,1051,4.025,1052,5.364,1053,4.025,1054,4.025,1055,4.025,1056,4.025,1057,4.025,1058,4.025,1059,4.025,1060,4.025,1061,4.025,1062,7.038,1063,4.025,1064,4.025,1065,4.025,1066,6.894,1067,4.025,1068,4.025,1069,5.364,1070,4.025,1071,4.025,1072,4.025,1073,5.364,1074,5.364,1075,4.025,1076,4.025,1077,4.025,1078,5.364,1079,5.364,1080,4.025,1081,4.025,1082,4.025,1083,4.025,1084,4.025,1085,3.462,1086,4.025,1087,4.025,1088,4.025,1089,4.025,1090,4.025,1091,4.025,1092,4.025,1093,4.025,1094,4.025,1095,3.462,1096,4.025,1097,4.025,1098,4.025,1099,4.025,1100,4.025,1101,4.025,1102,3.462]],["title/modules.html",[113,2.267]],["body/modules.html",[8,0.015,9,0.015,10,0.015,112,3.203,113,2.2,124,2.782,263,3.476,267,3.203,268,3.203,269,3.203,270,3.203,271,3.203,1085,6.356,1103,7.389,1104,7.389,1105,7.464,1106,4.97,1107,4.97]],["title/overview.html",[1108,4.404]],["body/overview.html",[2,1.176,8,0.018,9,0.011,10,0.011,13,1.3,63,2.751,65,3.72,88,1.951,111,0.805,112,4.379,113,1.443,114,1.524,115,1.712,116,1.712,117,1.524,118,1.613,119,1.613,120,2.803,121,2.803,122,2.803,123,2.803,124,3.869,125,2.437,126,1.712,127,1.712,134,1.443,213,3.233,217,2.837,221,2.943,263,5.2,264,2.803,265,2.803,266,2.803,267,4.284,268,4.006,269,4.006,270,4.164,271,3.48,345,2.1,348,2.503,387,3.233,397,2.803,399,2.803,507,3.29,528,2.803,529,2.803,530,3.48,636,2.803,637,2.803,664,2.803,665,2.803,666,2.803,731,2.279,845,2.803,846,2.803,847,2.803,1108,2.803,1109,3.258,1110,3.258,1111,4.638,1112,3.258,1113,3.258]],["title/properties.html",[90,1.412,1016,2.7]],["body/properties.html",[8,0.018,9,0.016,10,0.016,90,1.773,165,4.358,1095,4.88,1102,4.88,1114,5.673,1115,5.673,1116,5.673]],["title/miscellaneous/variables.html",[1043,2.196,1117,3.884]],["body/miscellaneous/variables.html",[1,3.137,8,0.018,9,0.014,10,0.014,16,0.713,31,0.713,38,1.54,57,4.175,61,4.175,110,1.893,157,3.06,225,3.848,295,1.993,588,3.848,693,5.895,694,5.264,985,3.647,991,4.084,999,4.084,1005,4.084,1009,4.084,1043,3.32,1117,4.084,1118,4.747,1119,4.747,1120,4.747,1121,4.747,1122,5.97,1123,4.747,1124,5.97]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"classes/Aaa.html":{},"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Bbb.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":454,"title":{},"body":{"classes/LoginDto.html":{},"injectables/RedisService.html":{},"coverage.html":{}}}],["0'})@isnotempty({message",{"_index":456,"title":{},"body":{"classes/LoginDto.html":{}}}],["0.0.1",{"_index":1115,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":242,"title":{"guards/LoginGuard-1.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}},"body":{"controllers/AppController.html":{},"injectables/RedisService.html":{}}}],["1.1.23",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["1.11.10",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["1.17.10",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["1.17.3",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"injectables/ValidatePipe.html":{},"overview.html":{}}}],["10.0.1",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":566,"title":{},"body":{"entities/Permission.html":{},"entities/User.html":{}}}],["111.log",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["1111",{"_index":246,"title":{},"body":{"controllers/AppController.html":{}}}],["1111'})@apiquery({name",{"_index":175,"title":{},"body":{"controllers/AppController.html":{}}}],["123456",{"_index":921,"title":{},"body":{"injectables/UserService.html":{}}}],["14",{"_index":1112,"title":{},"body":{"overview.html":{}}}],["20",{"_index":736,"title":{},"body":{"entities/Role.html":{}}}],["200",{"_index":521,"title":{},"body":{"controllers/MapController.html":{},"injectables/UserService.html":{}}}],["222",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["222})@get('bb/:id')@useguards(loginguard",{"_index":185,"title":{},"body":{"controllers/AppController.html":{}}}],["3",{"_index":1111,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["3.11.0",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["3.6.5",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":427,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"guards/PermissionGuard-1.html":{},"classes/RegisterDto.html":{},"interfaces/Session-1.html":{}}}],["30)@matches(/^[a",{"_index":728,"title":{},"body":{"classes/RegisterDto.html":{}}}],["30m",{"_index":816,"title":{},"body":{"controllers/UserController.html":{}}}],["3m",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["4.1.2",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["4.6.12",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1113,"title":{},"body":{"overview.html":{}}}],["50",{"_index":453,"title":{},"body":{"classes/LoginDto.html":{}}}],["6",{"_index":1110,"title":{},"body":{"overview.html":{}}}],["6379",{"_index":675,"title":{},"body":{"modules/RedisModule.html":{}}}],["7.1.17",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":818,"title":{},"body":{"controllers/UserController.html":{}}}],["8",{"_index":1109,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["9#$%_",{"_index":431,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["_",{"_index":432,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["_aaa",{"_index":907,"title":{},"body":{"injectables/UserService.html":{}}}],["_bbb",{"_index":925,"title":{},"body":{"injectables/UserService.html":{}}}],["a1",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["a2",{"_index":176,"title":{},"body":{"controllers/AppController.html":{}}}],["aa",{"_index":164,"title":{},"body":{"controllers/AppController.html":{}}}],["aaa",{"_index":1,"title":{"classes/Aaa.html":{}},"body":{"classes/Aaa.html":{},"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["aaa'})@apiresponse({status",{"_index":166,"title":{},"body":{"controllers/AppController.html":{}}}],["aaa('admin",{"_index":259,"title":{},"body":{"controllers/AppController.html":{}}}],["aaa.controller",{"_index":131,"title":{},"body":{"modules/AaaModule.html":{}}}],["aaa.decorator",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["aaa.dto",{"_index":68,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"classes/UpdateAaaDto.html":{}}}],["aaa.dto.ts",{"_index":409,"title":{},"body":{"classes/CreateAaaDto.html":{},"classes/UpdateAaaDto.html":{},"coverage.html":{}}}],["aaa.guard",{"_index":211,"title":{},"body":{"controllers/AppController.html":{}}}],["aaa.service",{"_index":66,"title":{},"body":{"controllers/AaaController.html":{},"modules/AaaModule.html":{}}}],["aaa/aaa.module",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["aaa/aaa.service",{"_index":212,"title":{},"body":{"controllers/AppController.html":{}}}],["aaaa",{"_index":247,"title":{},"body":{"controllers/AppController.html":{}}}],["aaacontroller",{"_index":12,"title":{"controllers/AaaController.html":{}},"body":{"controllers/AaaController.html":{},"modules/AaaModule.html":{},"coverage.html":{}}}],["aaaguard",{"_index":87,"title":{"guards/AaaGuard.html":{}},"body":{"guards/AaaGuard.html":{},"controllers/AppController.html":{},"coverage.html":{}}}],["aaamodule",{"_index":112,"title":{"modules/AaaModule.html":{}},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aaaservice",{"_index":65,"title":{"injectables/AaaService.html":{}},"body":{"controllers/AaaController.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["access_token",{"_index":811,"title":{},"body":{"controllers/UserController.html":{}}}],["action",{"_index":142,"title":{},"body":{"injectables/AaaService.html":{},"injectables/BbbService.html":{},"injectables/PersonService.html":{}}}],["addmap",{"_index":487,"title":{},"body":{"controllers/MapController.html":{}}}],["addmap(posname",{"_index":491,"title":{},"body":{"controllers/MapController.html":{}}}],["adds",{"_index":143,"title":{},"body":{"injectables/AaaService.html":{},"injectables/BbbService.html":{},"injectables/PersonService.html":{}}}],["admin",{"_index":943,"title":{},"body":{"injectables/UserService.html":{}}}],["age:53",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["amazing",{"_index":1086,"title":{},"body":{"index.html":{}}}],["api",{"_index":233,"title":{},"body":{"controllers/AppController.html":{}}}],["apioperation",{"_index":205,"title":{},"body":{"controllers/AppController.html":{}}}],["apioperation({summary",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["apiparam",{"_index":206,"title":{},"body":{"controllers/AppController.html":{}}}],["apiparam({name",{"_index":184,"title":{},"body":{"controllers/AppController.html":{}}}],["apiquery",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["apiresponse",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["apiresponse({status",{"_index":181,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":1064,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":214,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":147,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1058,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":263,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":213,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appstr",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["args",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argumentmetadata",{"_index":978,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["async",{"_index":149,"title":{},"body":{"controllers/AppController.html":{},"controllers/MapController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["author",{"_index":1095,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":469,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["authorization.split",{"_index":476,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["authplugin",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1107,"title":{},"body":{"modules.html":{}}}],["await",{"_index":515,"title":{},"body":{"controllers/MapController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":1087,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":506,"title":{},"body":{"controllers/MapController.html":{},"injectables/RedisService.html":{},"injectables/ValidatePipe.html":{}}}],["badrequestexception(`参数${metadata.data",{"_index":982,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["badrequestexception(e.message",{"_index":519,"title":{},"body":{"controllers/MapController.html":{}}}],["bb",{"_index":180,"title":{},"body":{"controllers/AppController.html":{}}}],["bbb",{"_index":182,"title":{"classes/Bbb.html":{}},"body":{"controllers/AppController.html":{},"classes/Bbb.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["bbb.controller",{"_index":401,"title":{},"body":{"modules/BbbModule.html":{}}}],["bbb.dto",{"_index":389,"title":{},"body":{"controllers/BbbController.html":{},"injectables/BbbService.html":{},"classes/UpdateBbbDto.html":{}}}],["bbb.dto.ts",{"_index":411,"title":{},"body":{"classes/CreateBbbDto.html":{},"classes/UpdateBbbDto.html":{},"coverage.html":{}}}],["bbb.service",{"_index":388,"title":{},"body":{"controllers/BbbController.html":{},"modules/BbbModule.html":{}}}],["bbb/bbb.module",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["bbbb",{"_index":250,"title":{},"body":{"controllers/AppController.html":{}}}],["bbbcontroller",{"_index":376,"title":{"controllers/BbbController.html":{}},"body":{"controllers/BbbController.html":{},"modules/BbbModule.html":{},"coverage.html":{}}}],["bbbmodule",{"_index":267,"title":{"modules/BbbModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules.html":{},"overview.html":{}}}],["bbbservice",{"_index":387,"title":{"injectables/BbbService.html":{}},"body":{"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"coverage.html":{},"overview.html":{}}}],["bearer",{"_index":475,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["bearer.length",{"_index":479,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["body",{"_index":50,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["body.name",{"_index":967,"title":{},"body":{"injectables/UserService.html":{}}}],["body:logindto,@res({passthrough:true",{"_index":807,"title":{},"body":{"controllers/UserController.html":{}}}],["body:logindto,@session",{"_index":831,"title":{},"body":{"controllers/UserController.html":{}}}],["body:registerdto",{"_index":836,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":98,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{}}}],["bootstrap",{"_index":117,"title":{},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1105,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1103,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1053,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":649,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["canactivate",{"_index":93,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{}}}],["canactivate(context",{"_index":94,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["catch",{"_index":517,"title":{},"body":{"controllers/MapController.html":{},"injectables/UserService.html":{}}}],["catch(e",{"_index":827,"title":{},"body":{"controllers/UserController.html":{}}}],["chalk",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["chalk.green(`[nest",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["chalk.yellow(`[${context",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":0,"title":{"classes/Aaa.html":{},"classes/Bbb.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/MyLogger.html":{},"classes/Person.html":{},"classes/RegisterDto.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"classes/Aaa.html":{},"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Bbb.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Aaa.html":{},"classes/Bbb.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/MyLogger.html":{},"classes/Person.html":{},"classes/RegisterDto.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["client",{"_index":672,"title":{},"body":{"modules/RedisModule.html":{}}}],["client.connect",{"_index":676,"title":{},"body":{"modules/RedisModule.html":{}}}],["cluster_aaamodule",{"_index":120,"title":{},"body":{"modules/AaaModule.html":{},"overview.html":{}}}],["cluster_aaamodule_exports",{"_index":121,"title":{},"body":{"modules/AaaModule.html":{},"overview.html":{}}}],["cluster_aaamodule_imports",{"_index":123,"title":{},"body":{"modules/AaaModule.html":{},"overview.html":{}}}],["cluster_aaamodule_providers",{"_index":122,"title":{},"body":{"modules/AaaModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bbbmodule",{"_index":397,"title":{},"body":{"modules/BbbModule.html":{},"overview.html":{}}}],["cluster_bbbmodule_imports",{"_index":398,"title":{},"body":{"modules/BbbModule.html":{}}}],["cluster_bbbmodule_providers",{"_index":399,"title":{},"body":{"modules/BbbModule.html":{},"overview.html":{}}}],["cluster_mapmodule",{"_index":528,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_providers",{"_index":529,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_personmodule",{"_index":636,"title":{},"body":{"modules/PersonModule.html":{},"overview.html":{}}}],["cluster_personmodule_providers",{"_index":637,"title":{},"body":{"modules/PersonModule.html":{},"overview.html":{}}}],["cluster_redismodule",{"_index":664,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_exports",{"_index":666,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_providers",{"_index":665,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":845,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":847,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":846,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":520,"title":{},"body":{"controllers/MapController.html":{}}}],["column",{"_index":574,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column({comment",{"_index":565,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["comment",{"_index":578,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["compodoc/compodoc",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["configmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(customer",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["connectorpackage",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(\"after02\",req.url",{"_index":450,"title":{},"body":{"injectables/LogMiddleware.html":{}}}],["console.log(\"before02\",req.url",{"_index":449,"title":{},"body":{"injectables/LogMiddleware.html":{}}}],["console.log('body01",{"_index":966,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('time",{"_index":661,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["console.log(`user_${user.name}_permissions",{"_index":604,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["console.log(authorization,\";;;;;55555",{"_index":477,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["console.log(body",{"_index":832,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(context.gethandler",{"_index":653,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["console.log(num",{"_index":257,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(role,\"role",{"_index":109,"title":{},"body":{"guards/AaaGuard.html":{}}}],["console.log(role1",{"_index":950,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(role2",{"_index":951,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(session",{"_index":243,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(this.name",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(user_permissions",{"_index":613,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["console.log(user_permissions,'redis",{"_index":607,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["const",{"_index":107,"title":{},"body":{"guards/AaaGuard.html":{},"modules/AppModule.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/WinstonModule.html":{}}}],["constructor",{"_index":227,"title":{},"body":{"controllers/AppController.html":{},"classes/MyLogger.html":{},"controllers/UserController.html":{}}}],["constructor(options",{"_index":539,"title":{},"body":{"classes/MyLogger.html":{}}}],["constructor(private",{"_index":72,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{}}}],["context",{"_index":97,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/QuerypageInterceptor.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{}}}],["context.getclass",{"_index":473,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.gethandler",{"_index":472,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session-1.html":{}}}],["context.switchtohttp().getrequest",{"_index":468,"title":{},"body":{"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{}}}],["contextstr",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":11,"title":{"controllers/AaaController.html":{},"controllers/AppController.html":{},"controllers/BbbController.html":{},"controllers/MapController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AaaController.html":{},"controllers/AppController.html":{},"controllers/BbbController.html":{},"controllers/MapController.html":{},"controllers/PersonController.html":{},"injectables/QuerypageInterceptor.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('aaa",{"_index":70,"title":{},"body":{"controllers/AaaController.html":{}}}],["controller('bbb",{"_index":390,"title":{},"body":{"controllers/BbbController.html":{}}}],["controller('map",{"_index":509,"title":{},"body":{"controllers/MapController.html":{}}}],["controller('person",{"_index":630,"title":{},"body":{"controllers/PersonController.html":{}}}],["controller('user",{"_index":803,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":13,"title":{},"body":{"controllers/AaaController.html":{},"modules/AaaModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":994,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":18,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":74,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["create(createaaadto",{"_index":23,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{}}}],["create(createbbbdto",{"_index":378,"title":{},"body":{"controllers/BbbController.html":{},"injectables/BbbService.html":{}}}],["create(createpersondto",{"_index":621,"title":{},"body":{"controllers/PersonController.html":{},"injectables/PersonService.html":{}}}],["create(createuserdto",{"_index":781,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createaaadto",{"_index":24,"title":{"classes/CreateAaaDto.html":{}},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"classes/CreateAaaDto.html":{},"classes/UpdateAaaDto.html":{},"coverage.html":{}}}],["createbbbdto",{"_index":379,"title":{"classes/CreateBbbDto.html":{}},"body":{"controllers/BbbController.html":{},"injectables/BbbService.html":{},"classes/CreateBbbDto.html":{},"classes/UpdateBbbDto.html":{},"coverage.html":{}}}],["createclient",{"_index":668,"title":{},"body":{"modules/RedisModule.html":{}}}],["createdatecolumn",{"_index":575,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["createdatecolumn({comment",{"_index":563,"title":{},"body":{"entities/Permission.html":{},"entities/User.html":{}}}],["createlogger",{"_index":551,"title":{},"body":{"classes/MyLogger.html":{}}}],["createlogger,logger",{"_index":548,"title":{},"body":{"classes/MyLogger.html":{}}}],["createpersondto",{"_index":412,"title":{"classes/CreatePersonDto.html":{}},"body":{"classes/CreatePersonDto.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/UpdatePersonDto.html":{},"coverage.html":{}}}],["createtime",{"_index":559,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["createuserdto",{"_index":415,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["crypto",{"_index":896,"title":{},"body":{"injectables/UserService.html":{}}}],["crypto.createhash('md5",{"_index":901,"title":{},"body":{"injectables/UserService.html":{}}}],["current",{"_index":590,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["customer",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["customer.apply(logmiddleware).forroutes(\"profile.json",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["customer:middlewareconsumer",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["database:process.env.db",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":562,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["date.now",{"_index":662,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["dayjs",{"_index":549,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["dayjs(date.now()).format('yyyy",{"_index":552,"title":{},"body":{"classes/MyLogger.html":{}}}],["dd",{"_index":554,"title":{},"body":{"classes/MyLogger.html":{}}}],["debug",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":116,"title":{},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":463,"title":{},"body":{"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{}}}],["decorators",{"_index":25,"title":{},"body":{"controllers/AaaController.html":{},"controllers/AppController.html":{},"controllers/BbbController.html":{},"classes/LoginDto.html":{},"controllers/MapController.html":{},"entities/Permission.html":{},"controllers/PersonController.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["default",{"_index":693,"title":{},"body":{"injectables/RedisService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{}}}],["delete",{"_index":53,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":43,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":560,"title":{},"body":{"entities/Permission.html":{}}}],["description",{"_index":165,"title":{},"body":{"controllers/AppController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":1065,"title":{},"body":{"index.html":{}}}],["dirname",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":776,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/create",{"_index":67,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":69,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":518,"title":{},"body":{"controllers/MapController.html":{},"injectables/UserService.html":{}}}],["e10adc3949ba59abbe56e057f20f883e",{"_index":954,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":1075,"title":{},"body":{"index.html":{}}}],["edit_aaa",{"_index":913,"title":{},"body":{"injectables/UserService.html":{}}}],["edit_bbb",{"_index":931,"title":{},"body":{"injectables/UserService.html":{}}}],["efficient",{"_index":1054,"title":{},"body":{"index.html":{}}}],["entities",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/permission.entity",{"_index":852,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entities/role.entity",{"_index":853,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entities/user.entity",{"_index":851,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":557,"title":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["entitymanager",{"_index":882,"title":{},"body":{"injectables/UserService.html":{}}}],["env",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":537,"title":{},"body":{"classes/MyLogger.html":{}}}],["error(message",{"_index":542,"title":{},"body":{"classes/MyLogger.html":{}}}],["example",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["executioncontext",{"_index":95,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/QuerypageInterceptor.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{}}}],["expiresin",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["export",{"_index":7,"title":{},"body":{"classes/Aaa.html":{},"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Bbb.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{}}}],["exports",{"_index":119,"title":{},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WinstonModule.html":{},"overview.html":{}}}],["exports:[aaaservice",{"_index":133,"title":{},"body":{"modules/AaaModule.html":{}}}],["exports:[redisservice",{"_index":677,"title":{},"body":{"modules/RedisModule.html":{}}}],["exports:[userservice,permissionguard",{"_index":856,"title":{},"body":{"modules/UserModule.html":{}}}],["express",{"_index":448,"title":{},"body":{"injectables/LogMiddleware.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":747,"title":{},"body":{"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{}}}],["extra",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":173,"title":{},"body":{"controllers/AppController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Aaa.html":{},"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Bbb.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"coverage.html":{}}}],["filename",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["find_aaa",{"_index":909,"title":{},"body":{"injectables/UserService.html":{}}}],["find_aaa')@requirepermission('find_aaa",{"_index":35,"title":{},"body":{"controllers/AaaController.html":{}}}],["find_bbb",{"_index":927,"title":{},"body":{"injectables/UserService.html":{}}}],["findall",{"_index":19,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyusername",{"_index":863,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusername(name",{"_index":869,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":20,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":80,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":37,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findrolesbyids",{"_index":864,"title":{},"body":{"injectables/UserService.html":{}}}],["findrolesbyids(roles",{"_index":872,"title":{},"body":{"injectables/UserService.html":{}}}],["for(let",{"_index":595,"title":{},"body":{"guards/PermissionGuard.html":{},"injectables/RedisService.html":{}}}],["format",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["format.colorize",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["format.combine",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["format.json",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["format.printf(({context",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["format.timestamp",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["forroot",{"_index":987,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forroot(options",{"_index":988,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forroot(options:loggeroptions",{"_index":992,"title":{},"body":{"modules/WinstonModule.html":{}}}],["founduser",{"_index":609,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["framework",{"_index":1052,"title":{},"body":{"index.html":{}}}],["function",{"_index":446,"title":{},"body":{"injectables/LogMiddleware.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["functions",{"_index":1044,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geoadd",{"_index":680,"title":{},"body":{"injectables/RedisService.html":{}}}],["geoadd(key",{"_index":685,"title":{},"body":{"injectables/RedisService.html":{}}}],["geosearch",{"_index":681,"title":{},"body":{"injectables/RedisService.html":{}}}],["geosearch(key",{"_index":689,"title":{},"body":{"injectables/RedisService.html":{}}}],["geosearch(key:string,pos:[number,number],radius:number,unit:any=\"km",{"_index":722,"title":{},"body":{"injectables/RedisService.html":{}}}],["get(\"done",{"_index":838,"title":{},"body":{"controllers/UserController.html":{}}}],["get(\"refresh",{"_index":821,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id",{"_index":39,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["get('aa",{"_index":244,"title":{},"body":{"controllers/AppController.html":{}}}],["get('aa')@useguards(loginguard)@apioperation({summary",{"_index":163,"title":{},"body":{"controllers/AppController.html":{}}}],["get('aaaa",{"_index":258,"title":{},"body":{"controllers/AppController.html":{}}}],["get('aaaa')@aaa('admin')@useguards(aaaguard",{"_index":159,"title":{},"body":{"controllers/AppController.html":{}}}],["get('add",{"_index":494,"title":{},"body":{"controllers/MapController.html":{}}}],["get('allpos",{"_index":497,"title":{},"body":{"controllers/MapController.html":{}}}],["get('bb/:id",{"_index":249,"title":{},"body":{"controllers/AppController.html":{}}}],["get('done",{"_index":783,"title":{},"body":{"controllers/UserController.html":{}}}],["get('login",{"_index":254,"title":{},"body":{"controllers/AppController.html":{}}}],["get('nearbysearch",{"_index":503,"title":{},"body":{"controllers/MapController.html":{}}}],["get('num",{"_index":191,"title":{},"body":{"controllers/AppController.html":{}}}],["get('pos",{"_index":500,"title":{},"body":{"controllers/MapController.html":{}}}],["get('profile.json",{"_index":251,"title":{},"body":{"controllers/AppController.html":{}}}],["get('profile.json')@useinterceptors(querypageinterceptor",{"_index":193,"title":{},"body":{"controllers/AppController.html":{}}}],["get('refresh",{"_index":791,"title":{},"body":{"controllers/UserController.html":{}}}],["get('sss",{"_index":196,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@requirepermission('find_bbb",{"_index":381,"title":{},"body":{"controllers/BbbController.html":{}}}],["get()@setmetadata('permission",{"_index":34,"title":{},"body":{"controllers/AaaController.html":{}}}],["getaaa",{"_index":150,"title":{},"body":{"controllers/AppController.html":{}}}],["getaaa(@query('num",{"_index":261,"title":{},"body":{"controllers/AppController.html":{}}}],["getaaa(num",{"_index":158,"title":{},"body":{"controllers/AppController.html":{}}}],["getaad",{"_index":151,"title":{},"body":{"controllers/AppController.html":{}}}],["getallgeo",{"_index":488,"title":{},"body":{"controllers/MapController.html":{}}}],["getallgeos",{"_index":682,"title":{},"body":{"injectables/RedisService.html":{}}}],["getallgeos(key",{"_index":696,"title":{},"body":{"injectables/RedisService.html":{}}}],["getallgeos(key:string",{"_index":716,"title":{},"body":{"injectables/RedisService.html":{}}}],["getbbb",{"_index":152,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":153,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getnum",{"_index":154,"title":{},"body":{"controllers/AppController.html":{}}}],["getnum(@query('num",{"_index":256,"title":{},"body":{"controllers/AppController.html":{}}}],["getnum(num",{"_index":190,"title":{},"body":{"controllers/AppController.html":{}}}],["getpos",{"_index":489,"title":{},"body":{"controllers/MapController.html":{},"injectables/RedisService.html":{}}}],["getpos(@query('name",{"_index":523,"title":{},"body":{"controllers/MapController.html":{}}}],["getpos(key",{"_index":698,"title":{},"body":{"injectables/RedisService.html":{}}}],["getpos(name",{"_index":499,"title":{},"body":{"controllers/MapController.html":{}}}],["getprofile",{"_index":155,"title":{},"body":{"controllers/AppController.html":{}}}],["getsession",{"_index":156,"title":{},"body":{"controllers/AppController.html":{}}}],["getsession(@session",{"_index":240,"title":{},"body":{"controllers/AppController.html":{}}}],["getsession(session",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":1048,"title":{"index.html":{}},"body":{}}],["global",{"_index":130,"title":{},"body":{"modules/AaaModule.html":{},"modules/RedisModule.html":{},"modules/WinstonModule.html":{}}}],["global:true",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":1106,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1082,"title":{},"body":{"index.html":{}}}],["guard",{"_index":86,"title":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{}},"body":{"injectables/QuerypageInterceptor.html":{},"coverage.html":{}}}],["guards",{"_index":88,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"overview.html":{}}}],["handler",{"_index":654,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["hash",{"_index":900,"title":{},"body":{"injectables/UserService.html":{}}}],["hash.digest('hex",{"_index":903,"title":{},"body":{"injectables/UserService.html":{}}}],["hash.update(str",{"_index":902,"title":{},"body":{"injectables/UserService.html":{}}}],["hello",{"_index":168,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["here",{"_index":1092,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":555,"title":{},"body":{"classes/MyLogger.html":{}}}],["host",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["httpexception",{"_index":892,"title":{},"body":{"injectables/UserService.html":{}}}],["https://nestjs.com",{"_index":1099,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["httpstatus.ok",{"_index":236,"title":{},"body":{"controllers/AppController.html":{}}}],["httpstatus.unauthorized",{"_index":248,"title":{},"body":{"controllers/AppController.html":{}}}],["id",{"_index":41,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"entities/Permission.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:number",{"_index":745,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["identifier",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["if(!bearer",{"_index":478,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["if(!per",{"_index":599,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["if(!request.session?.user",{"_index":482,"title":{},"body":{"guards/LoginGuard-1.html":{},"interfaces/Session.html":{}}}],["if(!request.user",{"_index":584,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["if(!requirelogin",{"_index":474,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["if(!requirepermissions",{"_index":594,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["if(number.isnan(parseint(value",{"_index":981,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["if(user_permissions.length===0",{"_index":608,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["implements",{"_index":105,"title":{},"body":{"guards/AaaGuard.html":{},"modules/AppModule.html":{},"injectables/LogMiddleware.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/QuerypageInterceptor.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"injectables/ValidatePipe.html":{}}}],["import",{"_index":49,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{}}}],["imports",{"_index":129,"title":{},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/UserModule.html":{}}}],["in(roles",{"_index":961,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Aaa.html":{},"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Bbb.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{}}}],["initdata",{"_index":865,"title":{},"body":{"injectables/UserService.html":{}}}],["initdata2",{"_index":866,"title":{},"body":{"injectables/UserService.html":{}}}],["inject",{"_index":101,"title":{},"body":{"guards/AaaGuard.html":{},"controllers/AppController.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"injectables/UserService.html":{}}}],["inject(\"user",{"_index":228,"title":{},"body":{"controllers/AppController.html":{}}}],["inject('redis_client",{"_index":707,"title":{},"body":{"injectables/RedisService.html":{}}}],["inject(aaaservice",{"_index":230,"title":{},"body":{"controllers/AppController.html":{}}}],["inject(jwtservice",{"_index":467,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["inject(personservice",{"_index":232,"title":{},"body":{"controllers/AppController.html":{}}}],["inject(redisservice",{"_index":510,"title":{},"body":{"controllers/MapController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["inject(reflector",{"_index":106,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session-1.html":{}}}],["inject(userservice",{"_index":583,"title":{},"body":{"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["inject(winston_logger_token",{"_index":231,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":102,"title":{"injectables/AaaService.html":{},"injectables/AppService.html":{},"injectables/BbbService.html":{},"injectables/LogMiddleware.html":{},"injectables/MapService.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{}},"body":{"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"injectables/AppService.html":{},"injectables/BbbService.html":{},"injectables/LogMiddleware.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"injectables/MapService.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["injectables",{"_index":134,"title":{},"body":{"injectables/AaaService.html":{},"injectables/AppService.html":{},"injectables/BbbService.html":{},"injectables/LogMiddleware.html":{},"injectables/MapService.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"overview.html":{}}}],["injectentitymanager",{"_index":883,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository",{"_index":894,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(permission",{"_index":886,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(role",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":1061,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1063,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":647,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["intercept(context",{"_index":648,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["interceptor",{"_index":656,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["interface",{"_index":464,"title":{"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{}},"body":{"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":731,"title":{},"body":{"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"overview.html":{}}}],["isnotempty",{"_index":419,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty({message",{"_index":451,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring",{"_index":420,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isstring()@isnotempty()@length(6",{"_index":727,"title":{},"body":{"classes/RegisterDto.html":{}}}],["item",{"_index":616,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["item.id",{"_index":587,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["iwan",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(process.cwd",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["jointable",{"_index":742,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["jwtlogin",{"_index":777,"title":{},"body":{"controllers/UserController.html":{}}}],["jwtlogin(@body(validationpipe",{"_index":806,"title":{},"body":{"controllers/UserController.html":{}}}],["jwtlogin(body",{"_index":787,"title":{},"body":{"controllers/UserController.html":{}}}],["jwtmodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.register",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtservice",{"_index":459,"title":{},"body":{"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"controllers/UserController.html":{}}}],["jwtservice:jwtservice",{"_index":804,"title":{},"body":{"controllers/UserController.html":{}}}],["kamil",{"_index":1096,"title":{},"body":{"index.html":{}}}],["key",{"_index":688,"title":{},"body":{"injectables/RedisService.html":{}}}],["km",{"_index":695,"title":{},"body":{"injectables/RedisService.html":{}}}],["latitude",{"_index":493,"title":{},"body":{"controllers/MapController.html":{}}}],["latitude:pos[1",{"_index":725,"title":{},"body":{"injectables/RedisService.html":{}}}],["latitude:res[0]?.latitude",{"_index":715,"title":{},"body":{"injectables/RedisService.html":{}}}],["legend",{"_index":115,"title":{},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":421,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["length(1",{"_index":452,"title":{},"body":{"classes/LoginDto.html":{}}}],["length(1,50",{"_index":435,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["length(6",{"_index":426,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["length:100",{"_index":771,"title":{},"body":{"entities/User.html":{}}}],["level",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":1102,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1079,"title":{},"body":{"index.html":{}}}],["like('%aaa",{"_index":949,"title":{},"body":{"injectables/UserService.html":{}}}],["list",{"_index":703,"title":{},"body":{"injectables/RedisService.html":{}}}],["list.push(res",{"_index":721,"title":{},"body":{"injectables/RedisService.html":{}}}],["listget",{"_index":683,"title":{},"body":{"injectables/RedisService.html":{}}}],["listget(key",{"_index":700,"title":{},"body":{"injectables/RedisService.html":{}}}],["listget(key:string",{"_index":709,"title":{},"body":{"injectables/RedisService.html":{}}}],["listset",{"_index":684,"title":{},"body":{"injectables/RedisService.html":{}}}],["listset(key",{"_index":702,"title":{},"body":{"injectables/RedisService.html":{}}}],["listset(key:string,list,ttl:number",{"_index":711,"title":{},"body":{"injectables/RedisService.html":{}}}],["literal",{"_index":732,"title":{},"body":{"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{}}}],["localhost",{"_index":674,"title":{},"body":{"modules/RedisModule.html":{}}}],["log",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"classes/MyLogger.html":{}}}],["log(message",{"_index":544,"title":{},"body":{"classes/MyLogger.html":{}}}],["log.middleware",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":202,"title":{},"body":{"controllers/AppController.html":{},"classes/MyLogger.html":{},"injectables/UserService.html":{}}}],["loggeroptions",{"_index":989,"title":{},"body":{"modules/WinstonModule.html":{}}}],["loggerservice",{"_index":536,"title":{},"body":{"classes/MyLogger.html":{}}}],["logging",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["login(body",{"_index":876,"title":{},"body":{"injectables/UserService.html":{}}}],["login.guard_jwt",{"_index":215,"title":{},"body":{"controllers/AppController.html":{}}}],["logindto",{"_index":434,"title":{"classes/LoginDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loginguard",{"_index":59,"title":{"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{}},"body":{"controllers/AaaController.html":{},"controllers/AppController.html":{},"controllers/BbbController.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"coverage.html":{}}}],["logmiddleware",{"_index":284,"title":{"injectables/LogMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogMiddleware.html":{},"coverage.html":{}}}],["longitude",{"_index":492,"title":{},"body":{"controllers/MapController.html":{}}}],["longitude:pos[0",{"_index":724,"title":{},"body":{"injectables/RedisService.html":{}}}],["longitude:res[0]?.longitude",{"_index":714,"title":{},"body":{"injectables/RedisService.html":{}}}],["manager",{"_index":858,"title":{},"body":{"injectables/UserService.html":{}}}],["manytomany",{"_index":743,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["manytomany(()=>permission",{"_index":772,"title":{},"body":{"entities/User.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":738,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["map",{"_index":486,"title":{},"body":{"controllers/MapController.html":{}}}],["map.controller",{"_index":532,"title":{},"body":{"modules/MapModule.html":{}}}],["map.service",{"_index":533,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.module",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["mapcontroller",{"_index":484,"title":{"controllers/MapController.html":{}},"body":{"controllers/MapController.html":{},"modules/MapModule.html":{},"coverage.html":{}}}],["mapmodule",{"_index":268,"title":{"modules/MapModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MapModule.html":{},"modules.html":{},"overview.html":{}}}],["mapservice",{"_index":530,"title":{"injectables/MapService.html":{}},"body":{"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["matches",{"_index":422,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["matches(/^[a",{"_index":428,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["matching",{"_index":10,"title":{},"body":{"classes/Aaa.html":{},"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Bbb.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["md5",{"_index":1013,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["md5(body.password",{"_index":969,"title":{},"body":{"injectables/UserService.html":{}}}],["md5(str",{"_index":899,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["message",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"classes/RegisterDto.html":{}}}],["message:\"字符不能为0",{"_index":436,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["metadata",{"_index":655,"title":{},"body":{"injectables/QuerypageInterceptor.html":{},"injectables/ValidatePipe.html":{},"dependencies.html":{}}}],["methods",{"_index":17,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"injectables/LogMiddleware.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{}}}],["middleware",{"_index":657,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["middlewareconsumer",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":1043,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1078,"title":{},"body":{"index.html":{}}}],["mm",{"_index":553,"title":{},"body":{"classes/MyLogger.html":{}}}],["mode",{"_index":1069,"title":{},"body":{"index.html":{}}}],["module",{"_index":111,"title":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WinstonModule.html":{}},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"modules/MapModule.html":{},"guards/PermissionGuard-1.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"modules/UserModule.html":{},"modules/WinstonModule.html":{},"overview.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1091,"title":{},"body":{"index.html":{}}}],["mylogger",{"_index":216,"title":{"classes/MyLogger.html":{}},"body":{"controllers/AppController.html":{},"classes/MyLogger.html":{},"injectables/UserService.html":{},"modules/WinstonModule.html":{},"coverage.html":{}}}],["mylogger(options",{"_index":993,"title":{},"body":{"modules/WinstonModule.html":{}}}],["mysql",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":1097,"title":{},"body":{"index.html":{}}}],["name",{"_index":30,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"miscellaneous/functions.html":{}}}],["name:\"iwan",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["name:posname",{"_index":713,"title":{},"body":{"injectables/RedisService.html":{}}}],["name:string",{"_index":424,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["namelstring",{"_index":465,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["nest",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestframework",{"_index":1101,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":651,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["nestjs/common",{"_index":56,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"injectables/LogMiddleware.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":103,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session-1.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/jwt/dist",{"_index":462,"title":{},"body":{"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{}}}],["nestjs/mapped",{"_index":750,"title":{},"body":{"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger/dist",{"_index":209,"title":{},"body":{"controllers/AppController.html":{}}}],["nestjs/typeorm",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm/dist",{"_index":893,"title":{},"body":{"injectables/UserService.html":{}}}],["nestjs/typeorm/dist/common",{"_index":895,"title":{},"body":{"injectables/UserService.html":{}}}],["nestjs/typeorm/dist/typeorm.module",{"_index":850,"title":{},"body":{"modules/UserModule.html":{}}}],["nestmiddleware",{"_index":447,"title":{},"body":{"injectables/LogMiddleware.html":{}}}],["nestmodule",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":144,"title":{},"body":{"injectables/AaaService.html":{},"modules/AppModule.html":{},"injectables/BbbService.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/PersonService.html":{},"injectables/RedisService.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"coverage.html":{}}}],["newuser",{"_index":970,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.name",{"_index":971,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":972,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":443,"title":{},"body":{"injectables/LogMiddleware.html":{},"injectables/QuerypageInterceptor.html":{}}}],["next.handle().pipe",{"_index":660,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["node.js",{"_index":1051,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1062,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":567,"title":{},"body":{"entities/Permission.html":{}}}],["nullable:true",{"_index":579,"title":{},"body":{"entities/Permission.html":{}}}],["num",{"_index":161,"title":{},"body":{"controllers/AppController.html":{}}}],["number",{"_index":138,"title":{},"body":{"injectables/AaaService.html":{},"controllers/AppController.html":{},"injectables/BbbService.html":{},"controllers/MapController.html":{},"entities/Permission.html":{},"injectables/PersonService.html":{},"injectables/RedisService.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{}}}],["observable",{"_index":100,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/QuerypageInterceptor.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{}}}],["open",{"_index":1080,"title":{},"body":{"index.html":{}}}],["optional",{"_index":32,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"injectables/LogMiddleware.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":541,"title":{},"body":{"classes/MyLogger.html":{},"modules/WinstonModule.html":{}}}],["out",{"_index":127,"title":{},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1108,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1016,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":52,"title":{},"body":{"controllers/AaaController.html":{},"controllers/AppController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"injectables/LogMiddleware.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"miscellaneous/functions.html":{}}}],["parseint(value",{"_index":984,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["partialtype",{"_index":749,"title":{},"body":{"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createaaadto",{"_index":748,"title":{},"body":{"classes/UpdateAaaDto.html":{}}}],["partialtype(createbbbdto",{"_index":753,"title":{},"body":{"classes/UpdateBbbDto.html":{}}}],["partialtype(createpersondto",{"_index":755,"title":{},"body":{"classes/UpdatePersonDto.html":{}}}],["partialtype(createuserdto",{"_index":758,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["password",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["password:string",{"_index":433,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{}}}],["patch",{"_index":51,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":47,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["path",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["pe1",{"_index":905,"title":{},"body":{"injectables/UserService.html":{}}}],["pe1.desc",{"_index":906,"title":{},"body":{"injectables/UserService.html":{}}}],["pe1.name",{"_index":908,"title":{},"body":{"injectables/UserService.html":{}}}],["pe2",{"_index":910,"title":{},"body":{"injectables/UserService.html":{}}}],["pe2.desc",{"_index":911,"title":{},"body":{"injectables/UserService.html":{}}}],["pe2.name",{"_index":912,"title":{},"body":{"injectables/UserService.html":{}}}],["pe3",{"_index":914,"title":{},"body":{"injectables/UserService.html":{}}}],["pe3.desc",{"_index":915,"title":{},"body":{"injectables/UserService.html":{}}}],["pe3.name",{"_index":916,"title":{},"body":{"injectables/UserService.html":{}}}],["pe4",{"_index":923,"title":{},"body":{"injectables/UserService.html":{}}}],["pe4.desc",{"_index":924,"title":{},"body":{"injectables/UserService.html":{}}}],["pe4.name",{"_index":926,"title":{},"body":{"injectables/UserService.html":{}}}],["pe5",{"_index":928,"title":{},"body":{"injectables/UserService.html":{}}}],["pe5.desc",{"_index":929,"title":{},"body":{"injectables/UserService.html":{}}}],["pe5.name",{"_index":930,"title":{},"body":{"injectables/UserService.html":{}}}],["pe6",{"_index":932,"title":{},"body":{"injectables/UserService.html":{}}}],["pe6.desc",{"_index":933,"title":{},"body":{"injectables/UserService.html":{}}}],["pe6.name",{"_index":934,"title":{},"body":{"injectables/UserService.html":{}}}],["per=permissions.find(v=>v.name===permission_item",{"_index":598,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permission",{"_index":295,"title":{"entities/Permission.html":{}},"body":{"modules/AppModule.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"entities/Role.html":{},"interfaces/Session-1.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.entity",{"_index":744,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["permission_item",{"_index":596,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissionguard",{"_index":63,"title":{"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{}},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["permissionrepository",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["permissions",{"_index":588,"title":{},"body":{"guards/PermissionGuard.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["permissions:permission",{"_index":773,"title":{},"body":{"entities/User.html":{}}}],["permissions:true",{"_index":963,"title":{},"body":{"injectables/UserService.html":{}}}],["person",{"_index":617,"title":{"classes/Person.html":{}},"body":{"classes/Person.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"coverage.html":{}}}],["person.controller",{"_index":639,"title":{},"body":{"modules/PersonModule.html":{}}}],["person.dto",{"_index":629,"title":{},"body":{"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/UpdatePersonDto.html":{}}}],["person.dto.ts",{"_index":414,"title":{},"body":{"classes/CreatePersonDto.html":{},"classes/UpdatePersonDto.html":{},"coverage.html":{}}}],["person.service",{"_index":628,"title":{},"body":{"controllers/PersonController.html":{},"modules/PersonModule.html":{}}}],["person/person.module",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["person/person.service",{"_index":218,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["personcontroller",{"_index":619,"title":{"controllers/PersonController.html":{}},"body":{"controllers/PersonController.html":{},"modules/PersonModule.html":{},"coverage.html":{}}}],["personmodule",{"_index":269,"title":{"modules/PersonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PersonModule.html":{},"modules.html":{},"overview.html":{}}}],["personservice",{"_index":217,"title":{"injectables/PersonService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"coverage.html":{},"overview.html":{}}}],["pipe",{"_index":659,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["pipetransform",{"_index":980,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["please",{"_index":1089,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["pos",{"_index":690,"title":{},"body":{"injectables/RedisService.html":{}}}],["positions",{"_index":527,"title":{},"body":{"controllers/MapController.html":{},"injectables/RedisService.html":{}}}],["positions=await",{"_index":717,"title":{},"body":{"injectables/RedisService.html":{}}}],["posname",{"_index":496,"title":{},"body":{"controllers/MapController.html":{},"injectables/RedisService.html":{}}}],["post",{"_index":26,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["post(\"login",{"_index":805,"title":{},"body":{"controllers/UserController.html":{}}}],["post(\"register",{"_index":834,"title":{},"body":{"controllers/UserController.html":{}}}],["post(\"session_login",{"_index":829,"title":{},"body":{"controllers/UserController.html":{}}}],["post('login",{"_index":788,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register",{"_index":794,"title":{},"body":{"controllers/UserController.html":{}}}],["post('session_login",{"_index":798,"title":{},"body":{"controllers/UserController.html":{}}}],["postions",{"_index":686,"title":{},"body":{"injectables/RedisService.html":{}}}],["prefix",{"_index":15,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/MapController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":569,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["private",{"_index":91,"title":{},"body":{"guards/AaaGuard.html":{},"controllers/AppController.html":{},"guards/LoginGuard.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process.env.dbpassword",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.dbport",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.dburi",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.dbuser",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":1071,"title":{},"body":{"index.html":{}}}],["profile",{"_index":253,"title":{},"body":{"controllers/AppController.html":{}}}],["progressive",{"_index":1050,"title":{},"body":{"index.html":{}}}],["project",{"_index":1081,"title":{},"body":{"index.html":{}}}],["promise",{"_index":99,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{}}}],["properties",{"_index":90,"title":{"properties.html":{}},"body":{"guards/AaaGuard.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"entities/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules/WinstonModule.html":{}}}],["provide:\"value",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":118,"title":{},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WinstonModule.html":{},"overview.html":{}}}],["public",{"_index":859,"title":{},"body":{"injectables/UserService.html":{},"modules/WinstonModule.html":{}}}],["query",{"_index":203,"title":{},"body":{"controllers/AppController.html":{},"controllers/MapController.html":{},"controllers/UserController.html":{}}}],["query('latitude",{"_index":513,"title":{},"body":{"controllers/MapController.html":{}}}],["query('longitude",{"_index":512,"title":{},"body":{"controllers/MapController.html":{}}}],["query('name",{"_index":511,"title":{},"body":{"controllers/MapController.html":{}}}],["query('radius",{"_index":525,"title":{},"body":{"controllers/MapController.html":{}}}],["querypage.interceptor",{"_index":220,"title":{},"body":{"controllers/AppController.html":{}}}],["querypageinterceptor",{"_index":219,"title":{"injectables/QuerypageInterceptor.html":{}},"body":{"controllers/AppController.html":{},"injectables/QuerypageInterceptor.html":{},"coverage.html":{}}}],["radius",{"_index":505,"title":{},"body":{"controllers/MapController.html":{},"injectables/RedisService.html":{}}}],["radius,unit",{"_index":726,"title":{},"body":{"injectables/RedisService.html":{}}}],["read",{"_index":1090,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":73,"title":{},"body":{"controllers/AaaController.html":{},"controllers/AppController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["redis",{"_index":603,"title":{},"body":{"guards/PermissionGuard-1.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Session-1.html":{},"dependencies.html":{}}}],["redis.service",{"_index":669,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis/redis.module",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["redis/redis.service",{"_index":582,"title":{},"body":{"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["redis_client",{"_index":670,"title":{},"body":{"modules/RedisModule.html":{}}}],["redisclient",{"_index":679,"title":{},"body":{"injectables/RedisService.html":{}}}],["redisclienttype",{"_index":706,"title":{},"body":{"injectables/RedisService.html":{}}}],["redismodule",{"_index":270,"title":{"modules/RedisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redisservice",{"_index":507,"title":{"injectables/RedisService.html":{}},"body":{"controllers/MapController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Session-1.html":{},"coverage.html":{},"overview.html":{}}}],["reflect",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":92,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session-1.html":{}}}],["refresh_token",{"_index":817,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtoken",{"_index":778,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtoken(@query(\"refresh_token",{"_index":822,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtoken(refreshtoken",{"_index":790,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtoken:string",{"_index":823,"title":{},"body":{"controllers/UserController.html":{}}}],["register",{"_index":779,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body(validationpipe",{"_index":835,"title":{},"body":{"controllers/UserController.html":{}}}],["register(body",{"_index":793,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["registerdto",{"_index":425,"title":{"classes/RegisterDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["relations",{"_index":962,"title":{},"body":{"injectables/UserService.html":{}}}],["remove",{"_index":21,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":84,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":42,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove_aaa",{"_index":917,"title":{},"body":{"injectables/UserService.html":{}}}],["removes",{"_index":146,"title":{},"body":{"injectables/AaaService.html":{},"injectables/BbbService.html":{},"injectables/PersonService.html":{}}}],["render",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["repository",{"_index":885,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":445,"title":{},"body":{"injectables/LogMiddleware.html":{}}}],["request",{"_index":440,"title":{"interfaces/Request.html":{}},"body":{"injectables/LogMiddleware.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"coverage.html":{}}}],["request.header('authorization",{"_index":470,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["request?.session.user",{"_index":602,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["required",{"_index":172,"title":{},"body":{"controllers/AppController.html":{}}}],["requirelogin",{"_index":57,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirelogin=this.reflector.getallandoverride(\"require",{"_index":471,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["requirepermission",{"_index":61,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirepermission(\"find_aaa",{"_index":78,"title":{},"body":{"controllers/AaaController.html":{}}}],["requirepermission(\"find_bbb",{"_index":392,"title":{},"body":{"controllers/BbbController.html":{}}}],["requirepermissions",{"_index":597,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requirepermissions=this.reflector.getallandoverride(\"require",{"_index":593,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["res",{"_index":441,"title":{},"body":{"injectables/LogMiddleware.html":{},"controllers/UserController.html":{}}}],["res.setheader('authorzation",{"_index":819,"title":{},"body":{"controllers/UserController.html":{}}}],["res:response",{"_index":808,"title":{},"body":{"controllers/UserController.html":{}}}],["res=await",{"_index":719,"title":{},"body":{"injectables/RedisService.html":{}}}],["reset",{"_index":126,"title":{},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":442,"title":{},"body":{"injectables/LogMiddleware.html":{},"controllers/UserController.html":{}}}],["results",{"_index":9,"title":{},"body":{"classes/Aaa.html":{},"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Bbb.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":75,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{}}}],["returns",{"_index":33,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"injectables/LogMiddleware.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{}}}],["rimraf",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":299,"title":{"entities/Role.html":{}},"body":{"modules/AppModule.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.entity",{"_index":770,"title":{},"body":{"entities/User.html":{}}}],["role1",{"_index":941,"title":{},"body":{"injectables/UserService.html":{}}}],["role1.name",{"_index":942,"title":{},"body":{"injectables/UserService.html":{}}}],["role1.permissions",{"_index":944,"title":{},"body":{"injectables/UserService.html":{}}}],["role2",{"_index":946,"title":{},"body":{"injectables/UserService.html":{}}}],["role2.name",{"_index":947,"title":{},"body":{"injectables/UserService.html":{}}}],["role2.permissions",{"_index":948,"title":{},"body":{"injectables/UserService.html":{}}}],["role=this.reflector.get(\"aaa\",context.gethandler",{"_index":108,"title":{},"body":{"guards/AaaGuard.html":{}}}],["role_permission_relation",{"_index":739,"title":{},"body":{"entities/Role.html":{}}}],["rolerepository",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["roles",{"_index":585,"title":{},"body":{"guards/PermissionGuard.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["roles.reduce((total",{"_index":589,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["roles:role",{"_index":466,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["run",{"_index":1066,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":104,"title":{},"body":{"guards/AaaGuard.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/QuerypageInterceptor.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"dependencies.html":{}}}],["scalable",{"_index":1055,"title":{},"body":{"index.html":{}}}],["search",{"_index":490,"title":{},"body":{"controllers/MapController.html":{}}}],["search(radius",{"_index":502,"title":{},"body":{"controllers/MapController.html":{}}}],["secret",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":1056,"title":{},"body":{"index.html":{}}}],["session",{"_index":198,"title":{"interfaces/Session.html":{},"interfaces/Session-1.html":{}},"body":{"controllers/AppController.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"coverage.html":{},"dependencies.html":{}}}],["session.count",{"_index":241,"title":{},"body":{"controllers/AppController.html":{}}}],["session.user",{"_index":833,"title":{},"body":{"controllers/UserController.html":{}}}],["sesstion_login",{"_index":780,"title":{},"body":{"controllers/UserController.html":{}}}],["sesstion_login(@body(validationpipe",{"_index":830,"title":{},"body":{"controllers/UserController.html":{}}}],["sesstion_login(body",{"_index":797,"title":{},"body":{"controllers/UserController.html":{}}}],["setmetadata",{"_index":55,"title":{},"body":{"controllers/AaaController.html":{}}}],["setmetadata(\"permission\",\"find_aaa",{"_index":77,"title":{},"body":{"controllers/AaaController.html":{}}}],["setmetadata('aaa",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('require",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sha256_password",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":1057,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["socket",{"_index":673,"title":{},"body":{"modules/RedisModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Aaa.html":{},"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"modules/AaaModule.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Bbb.html":{},"controllers/BbbController.html":{},"modules/BbbModule.html":{},"injectables/BbbService.html":{},"classes/CreateAaaDto.html":{},"classes/CreateBbbDto.html":{},"classes/CreatePersonDto.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"index.html":{}}}],["sponsors",{"_index":1084,"title":{},"body":{"index.html":{}}}],["src/.../aaa.decorator.ts",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.decorator.ts",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.decorator.ts",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../winston.module.ts",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/aaa.decorator.ts",{"_index":999,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/aaa.guard.ts",{"_index":89,"title":{},"body":{"guards/AaaGuard.html":{},"coverage.html":{}}}],["src/aaa.guard.ts:9",{"_index":96,"title":{},"body":{"guards/AaaGuard.html":{}}}],["src/aaa/aaa.controller.ts",{"_index":14,"title":{},"body":{"controllers/AaaController.html":{},"coverage.html":{}}}],["src/aaa/aaa.controller.ts:18",{"_index":28,"title":{},"body":{"controllers/AaaController.html":{}}}],["src/aaa/aaa.controller.ts:25",{"_index":36,"title":{},"body":{"controllers/AaaController.html":{}}}],["src/aaa/aaa.controller.ts:30",{"_index":40,"title":{},"body":{"controllers/AaaController.html":{}}}],["src/aaa/aaa.controller.ts:35",{"_index":48,"title":{},"body":{"controllers/AaaController.html":{}}}],["src/aaa/aaa.controller.ts:40",{"_index":44,"title":{},"body":{"controllers/AaaController.html":{}}}],["src/aaa/aaa.module.ts",{"_index":128,"title":{},"body":{"modules/AaaModule.html":{}}}],["src/aaa/aaa.service.ts",{"_index":135,"title":{},"body":{"injectables/AaaService.html":{},"coverage.html":{}}}],["src/aaa/aaa.service.ts:11",{"_index":137,"title":{},"body":{"injectables/AaaService.html":{}}}],["src/aaa/aaa.service.ts:15",{"_index":139,"title":{},"body":{"injectables/AaaService.html":{}}}],["src/aaa/aaa.service.ts:19",{"_index":141,"title":{},"body":{"injectables/AaaService.html":{}}}],["src/aaa/aaa.service.ts:23",{"_index":140,"title":{},"body":{"injectables/AaaService.html":{}}}],["src/aaa/aaa.service.ts:7",{"_index":136,"title":{},"body":{"injectables/AaaService.html":{}}}],["src/aaa/dto/create",{"_index":408,"title":{},"body":{"classes/CreateAaaDto.html":{},"coverage.html":{}}}],["src/aaa/dto/update",{"_index":746,"title":{},"body":{"classes/UpdateAaaDto.html":{},"coverage.html":{}}}],["src/aaa/entities/aaa.entity.ts",{"_index":6,"title":{},"body":{"classes/Aaa.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":148,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:111",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:116",{"_index":194,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:125",{"_index":200,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:130",{"_index":192,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:138",{"_index":160,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:53",{"_index":189,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:61",{"_index":197,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:89",{"_index":178,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:105",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":373,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":374,"title":{},"body":{"injectables/AppService.html":{}}}],["src/bbb/bbb.controller.ts",{"_index":377,"title":{},"body":{"controllers/BbbController.html":{},"coverage.html":{}}}],["src/bbb/bbb.controller.ts:17",{"_index":380,"title":{},"body":{"controllers/BbbController.html":{}}}],["src/bbb/bbb.controller.ts:23",{"_index":382,"title":{},"body":{"controllers/BbbController.html":{}}}],["src/bbb/bbb.controller.ts:28",{"_index":383,"title":{},"body":{"controllers/BbbController.html":{}}}],["src/bbb/bbb.controller.ts:33",{"_index":386,"title":{},"body":{"controllers/BbbController.html":{}}}],["src/bbb/bbb.controller.ts:38",{"_index":384,"title":{},"body":{"controllers/BbbController.html":{}}}],["src/bbb/bbb.module.ts",{"_index":400,"title":{},"body":{"modules/BbbModule.html":{}}}],["src/bbb/bbb.service.ts",{"_index":402,"title":{},"body":{"injectables/BbbService.html":{},"coverage.html":{}}}],["src/bbb/bbb.service.ts:11",{"_index":404,"title":{},"body":{"injectables/BbbService.html":{}}}],["src/bbb/bbb.service.ts:15",{"_index":405,"title":{},"body":{"injectables/BbbService.html":{}}}],["src/bbb/bbb.service.ts:19",{"_index":407,"title":{},"body":{"injectables/BbbService.html":{}}}],["src/bbb/bbb.service.ts:23",{"_index":406,"title":{},"body":{"injectables/BbbService.html":{}}}],["src/bbb/bbb.service.ts:7",{"_index":403,"title":{},"body":{"injectables/BbbService.html":{}}}],["src/bbb/dto/create",{"_index":410,"title":{},"body":{"classes/CreateBbbDto.html":{},"coverage.html":{}}}],["src/bbb/dto/update",{"_index":752,"title":{},"body":{"classes/UpdateBbbDto.html":{},"coverage.html":{}}}],["src/bbb/entities/bbb.entity.ts",{"_index":375,"title":{},"body":{"classes/Bbb.html":{},"coverage.html":{}}}],["src/log.middleware.ts",{"_index":437,"title":{},"body":{"injectables/LogMiddleware.html":{},"coverage.html":{}}}],["src/log.middleware.ts:6",{"_index":444,"title":{},"body":{"injectables/LogMiddleware.html":{}}}],["src/login.decorator",{"_index":58,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{}}}],["src/login.decorator.ts",{"_index":1005,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/login.guard_jwt",{"_index":60,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{}}}],["src/login.guard_jwt.ts",{"_index":458,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/login.guard_jwt.ts:26",{"_index":460,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/login.guard_session.ts",{"_index":480,"title":{},"body":{"guards/LoginGuard-1.html":{},"interfaces/Session.html":{},"coverage.html":{}}}],["src/login.guard_session.ts:16",{"_index":481,"title":{},"body":{"guards/LoginGuard-1.html":{}}}],["src/main.ts",{"_index":1007,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/map/map.controller.ts",{"_index":485,"title":{},"body":{"controllers/MapController.html":{},"coverage.html":{}}}],["src/map/map.controller.ts:17",{"_index":495,"title":{},"body":{"controllers/MapController.html":{}}}],["src/map/map.controller.ts:41",{"_index":498,"title":{},"body":{"controllers/MapController.html":{}}}],["src/map/map.controller.ts:46",{"_index":501,"title":{},"body":{"controllers/MapController.html":{}}}],["src/map/map.controller.ts:51",{"_index":504,"title":{},"body":{"controllers/MapController.html":{}}}],["src/map/map.module.ts",{"_index":531,"title":{},"body":{"modules/MapModule.html":{}}}],["src/map/map.service.ts",{"_index":534,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/mylogger",{"_index":897,"title":{},"body":{"injectables/UserService.html":{},"modules/WinstonModule.html":{}}}],["src/mylogger.ts",{"_index":535,"title":{},"body":{"classes/MyLogger.html":{},"coverage.html":{}}}],["src/mylogger.ts:15",{"_index":545,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/mylogger.ts:21",{"_index":543,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/mylogger.ts:27",{"_index":547,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/mylogger.ts:8",{"_index":540,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/permission.decorator",{"_index":62,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{}}}],["src/permission.decorator.ts",{"_index":1009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/permission.guard",{"_index":64,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"modules/UserModule.html":{}}}],["src/permission.guard.ts",{"_index":580,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["src/permission.guard.ts:28",{"_index":581,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["src/permission.guard_acl.ts",{"_index":600,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{},"coverage.html":{}}}],["src/permission.guard_acl.ts:32",{"_index":601,"title":{},"body":{"guards/PermissionGuard-1.html":{}}}],["src/person/dto/create",{"_index":413,"title":{},"body":{"classes/CreatePersonDto.html":{},"coverage.html":{}}}],["src/person/dto/update",{"_index":754,"title":{},"body":{"classes/UpdatePersonDto.html":{},"coverage.html":{}}}],["src/person/entities/person.entity.ts",{"_index":618,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["src/person/person.controller.ts",{"_index":620,"title":{},"body":{"controllers/PersonController.html":{},"coverage.html":{}}}],["src/person/person.controller.ts:11",{"_index":622,"title":{},"body":{"controllers/PersonController.html":{}}}],["src/person/person.controller.ts:16",{"_index":623,"title":{},"body":{"controllers/PersonController.html":{}}}],["src/person/person.controller.ts:21",{"_index":624,"title":{},"body":{"controllers/PersonController.html":{}}}],["src/person/person.controller.ts:26",{"_index":627,"title":{},"body":{"controllers/PersonController.html":{}}}],["src/person/person.controller.ts:31",{"_index":625,"title":{},"body":{"controllers/PersonController.html":{}}}],["src/person/person.module.ts",{"_index":638,"title":{},"body":{"modules/PersonModule.html":{}}}],["src/person/person.service.ts",{"_index":640,"title":{},"body":{"injectables/PersonService.html":{},"coverage.html":{}}}],["src/person/person.service.ts:11",{"_index":642,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/person/person.service.ts:15",{"_index":643,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/person/person.service.ts:19",{"_index":645,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/person/person.service.ts:23",{"_index":644,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/person/person.service.ts:7",{"_index":641,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/querypage.interceptor.ts",{"_index":646,"title":{},"body":{"injectables/QuerypageInterceptor.html":{},"coverage.html":{}}}],["src/querypage.interceptor.ts:6",{"_index":650,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["src/redis/redis.module.ts",{"_index":667,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/redis.service",{"_index":508,"title":{},"body":{"controllers/MapController.html":{}}}],["src/redis/redis.service.ts",{"_index":678,"title":{},"body":{"injectables/RedisService.html":{},"coverage.html":{}}}],["src/redis/redis.service.ts:16",{"_index":705,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:26",{"_index":687,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:37",{"_index":699,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:49",{"_index":697,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:59",{"_index":692,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:6",{"_index":708,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:9",{"_index":701,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/user/dto/create",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":757,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/permission.entity.ts",{"_index":558,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["src/user/entities/permission.entity.ts:12",{"_index":570,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:18",{"_index":571,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:25",{"_index":568,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:30",{"_index":564,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:35",{"_index":573,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/role.entity.ts",{"_index":733,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/user/entities/role.entity.ts:15",{"_index":737,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:20",{"_index":734,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:23",{"_index":741,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:29",{"_index":740,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:9",{"_index":735,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/user.entity.ts",{"_index":760,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:15",{"_index":763,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:21",{"_index":764,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:26",{"_index":761,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:31",{"_index":769,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:39",{"_index":766,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:46",{"_index":768,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":762,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.controller.ts",{"_index":775,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:104",{"_index":785,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:109",{"_index":786,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:114",{"_index":800,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:119",{"_index":796,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:17",{"_index":789,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:44",{"_index":792,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:75",{"_index":799,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:87",{"_index":795,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:93",{"_index":784,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:99",{"_index":782,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":132,"title":{},"body":{"modules/AaaModule.html":{},"modules/BbbModule.html":{}}}],["src/user/user.module.ts",{"_index":848,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":857,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/user.service.ts:109",{"_index":868,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:113",{"_index":871,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:121",{"_index":873,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:132",{"_index":880,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:139",{"_index":879,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:143",{"_index":870,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:156",{"_index":877,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:176",{"_index":878,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":884,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":881,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:30",{"_index":891,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":887,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:35",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:37",{"_index":867,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:41",{"_index":874,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:76",{"_index":875,"title":{},"body":{"injectables/UserService.html":{}}}],["src/validate.pipe.ts",{"_index":975,"title":{},"body":{"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["src/validate.pipe.ts:5",{"_index":979,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["src/winston/winston.module",{"_index":898,"title":{},"body":{"injectables/UserService.html":{}}}],["src/winston/winston.module.ts",{"_index":985,"title":{},"body":{"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/winston/winston.module.ts:13",{"_index":990,"title":{},"body":{"modules/WinstonModule.html":{}}}],["start",{"_index":1067,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1070,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1072,"title":{},"body":{"index.html":{}}}],["started",{"_index":1049,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1060,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":663,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["starttime=date.now",{"_index":658,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["statements",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":986,"title":{},"body":{"modules/WinstonModule.html":{}}}],["status",{"_index":235,"title":{},"body":{"controllers/AppController.html":{}}}],["stay",{"_index":1093,"title":{},"body":{"index.html":{}}}],["str",{"_index":1047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":38,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["string})@apiquery({name",{"_index":170,"title":{},"body":{"controllers/AppController.html":{}}}],["string})@apiresponse({status",{"_index":183,"title":{},"body":{"controllers/AppController.html":{}}}],["string})@get",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["success",{"_index":255,"title":{},"body":{"controllers/AppController.html":{},"controllers/MapController.html":{},"controllers/UserController.html":{}}}],["summary",{"_index":234,"title":{},"body":{"controllers/AppController.html":{}}}],["support",{"_index":1085,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1104,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":652,"title":{},"body":{"injectables/QuerypageInterceptor.html":{}}}],["test",{"_index":1074,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1077,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1076,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1073,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1083,"title":{},"body":{"index.html":{}}}],["this.aaaservice.create(createaaadto",{"_index":76,"title":{},"body":{"controllers/AaaController.html":{}}}],["this.aaaservice.findall",{"_index":79,"title":{},"body":{"controllers/AaaController.html":{}}}],["this.aaaservice.findone(+id",{"_index":81,"title":{},"body":{"controllers/AaaController.html":{}}}],["this.aaaservice.remove(+id",{"_index":85,"title":{},"body":{"controllers/AaaController.html":{}}}],["this.aaaservice.update(+id",{"_index":83,"title":{},"body":{"controllers/AaaController.html":{}}}],["this.appservice.gethello",{"_index":239,"title":{},"body":{"controllers/AppController.html":{}}}],["this.bbbservice.create(createbbbdto",{"_index":391,"title":{},"body":{"controllers/BbbController.html":{}}}],["this.bbbservice.findall",{"_index":393,"title":{},"body":{"controllers/BbbController.html":{}}}],["this.bbbservice.findone(+id",{"_index":394,"title":{},"body":{"controllers/BbbController.html":{}}}],["this.bbbservice.remove(+id",{"_index":396,"title":{},"body":{"controllers/BbbController.html":{}}}],["this.bbbservice.update(+id",{"_index":395,"title":{},"body":{"controllers/BbbController.html":{}}}],["this.getpos(key,pos",{"_index":720,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.jwtservice.sign",{"_index":812,"title":{},"body":{"controllers/UserController.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":825,"title":{},"body":{"controllers/UserController.html":{}}}],["this.logger",{"_index":550,"title":{},"body":{"classes/MyLogger.html":{}}}],["this.logger.error(e",{"_index":974,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.log('info",{"_index":556,"title":{},"body":{"classes/MyLogger.html":{}}}],["this.logger.log(`get",{"_index":262,"title":{},"body":{"controllers/AppController.html":{}}}],["this.permissionrepository.find",{"_index":945,"title":{},"body":{"injectables/UserService.html":{}}}],["this.permissionrepository.save([pe1",{"_index":939,"title":{},"body":{"injectables/UserService.html":{}}}],["this.personservice.create(createpersondto",{"_index":631,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.personservice.findall",{"_index":632,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.personservice.findone(+id",{"_index":633,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.personservice.remove(+id",{"_index":635,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.personservice.update(+id",{"_index":634,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.redisclient.georadius(key",{"_index":723,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.lrange(key,0",{"_index":710,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.zrange(key,0",{"_index":718,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisservice.geoadd('positions",{"_index":516,"title":{},"body":{"controllers/MapController.html":{}}}],["this.redisservice.geosearch",{"_index":526,"title":{},"body":{"controllers/MapController.html":{}}}],["this.redisservice.getallgeos('positions",{"_index":522,"title":{},"body":{"controllers/MapController.html":{}}}],["this.redisservice.getpos('positions",{"_index":524,"title":{},"body":{"controllers/MapController.html":{}}}],["this.redisservice.listget(`user_${user.name}_permissions",{"_index":606,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["this.redisservice.listset(`user_${user.name}_permissions`,user_permissions,60",{"_index":612,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["this.reflector.get('permission",{"_index":614,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["this.rolerepository.find",{"_index":960,"title":{},"body":{"injectables/UserService.html":{}}}],["this.rolerepository.save([role1",{"_index":952,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.delete(id",{"_index":965,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":958,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":959,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save",{"_index":964,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save([user1",{"_index":940,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(createuserdto",{"_index":904,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":973,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create",{"_index":237,"title":{},"body":{"controllers/AppController.html":{}}}],["this.userservice.create(createuserdto",{"_index":840,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":841,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyusername(user.name",{"_index":610,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["this.userservice.findone(+id",{"_index":842,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(userid",{"_index":826,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findrolesbyids(request.user.roles.map(item",{"_index":586,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.userservice.initdata2",{"_index":839,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.login(body",{"_index":810,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(body",{"_index":837,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(+id",{"_index":844,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(+id",{"_index":843,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":483,"title":{},"body":{"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"injectables/RedisService.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{}}}],["time",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"classes/MyLogger.html":{}}}],["token",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["total",{"_index":592,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["total.push(...current.permissions",{"_index":591,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["touch",{"_index":1094,"title":{},"body":{"index.html":{}}}],["transform",{"_index":976,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["transform(value",{"_index":977,"title":{},"body":{"injectables/ValidatePipe.html":{}}}],["transformer",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["transports,format",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["transports.console",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["transports.file",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":110,"title":{},"body":{"guards/AaaGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":514,"title":{},"body":{"controllers/MapController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ttl",{"_index":704,"title":{},"body":{"injectables/RedisService.html":{}}}],["twitter",{"_index":1100,"title":{},"body":{"index.html":{}}}],["type",{"_index":31,"title":{},"body":{"controllers/AaaController.html":{},"guards/AaaGuard.html":{},"injectables/AaaService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"classes/CreateUserDto.html":{},"injectables/LogMiddleware.html":{},"classes/LoginDto.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"controllers/MapController.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/QuerypageInterceptor.html":{},"injectables/RedisService.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":983,"title":{},"body":{"injectables/ValidatePipe.html":{},"modules/WinstonModule.html":{}}}],["typeorm",{"_index":577,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":854,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":751,"title":{},"body":{"classes/UpdateAaaDto.html":{},"classes/UpdateBbbDto.html":{},"classes/UpdatePersonDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types/express",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1059,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":461,"title":{},"body":{"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception(\"token",{"_index":828,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined",{"_index":167,"title":{},"body":{"controllers/AppController.html":{}}}],["unit",{"_index":691,"title":{},"body":{"injectables/RedisService.html":{},"index.html":{}}}],["unknown",{"_index":162,"title":{},"body":{"controllers/AppController.html":{},"controllers/MapController.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1116,"title":{},"body":{"properties.html":{}}}],["update",{"_index":22,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":82,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{},"controllers/PersonController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":45,"title":{},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"controllers/BbbController.html":{},"injectables/BbbService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateaaadto",{"_index":46,"title":{"classes/UpdateAaaDto.html":{}},"body":{"controllers/AaaController.html":{},"injectables/AaaService.html":{},"classes/UpdateAaaDto.html":{},"coverage.html":{}}}],["updatebbbdto",{"_index":385,"title":{"classes/UpdateBbbDto.html":{}},"body":{"controllers/BbbController.html":{},"injectables/BbbService.html":{},"classes/UpdateBbbDto.html":{},"coverage.html":{}}}],["updatedatecolumn",{"_index":576,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["updatedatecolumn({comment",{"_index":572,"title":{},"body":{"entities/Permission.html":{},"entities/User.html":{}}}],["updatepersondto",{"_index":626,"title":{"classes/UpdatePersonDto.html":{}},"body":{"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/UpdatePersonDto.html":{},"coverage.html":{}}}],["updates",{"_index":145,"title":{},"body":{"injectables/AaaService.html":{},"injectables/BbbService.html":{},"injectables/PersonService.html":{}}}],["updatetime",{"_index":561,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["updateuserdto",{"_index":756,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["use",{"_index":438,"title":{},"body":{"injectables/LogMiddleware.html":{}}}],["use(req",{"_index":439,"title":{},"body":{"injectables/LogMiddleware.html":{}}}],["useclass",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":671,"title":{},"body":{"modules/RedisModule.html":{}}}],["useguards",{"_index":54,"title":{},"body":{"controllers/AaaController.html":{},"controllers/AppController.html":{},"controllers/BbbController.html":{}}}],["useguards(aaaguard",{"_index":260,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(loginguard",{"_index":245,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(loginguard)@get('login",{"_index":199,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(loginguard,permissionguard",{"_index":71,"title":{},"body":{"controllers/AaaController.html":{},"controllers/BbbController.html":{}}}],["useinterceptors",{"_index":204,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(querypageinterceptor",{"_index":252,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":291,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"guards/LoginGuard.html":{},"guards/LoginGuard-1.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Request.html":{},"interfaces/Session.html":{},"interfaces/Session-1.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user,permission,role",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["user.controller",{"_index":849,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":759,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":729,"title":{},"body":{"classes/RegisterDto.html":{}}}],["user.dto.ts:18",{"_index":730,"title":{},"body":{"classes/RegisterDto.html":{}}}],["user.dto.ts:28",{"_index":455,"title":{},"body":{"classes/LoginDto.html":{}}}],["user.dto.ts:35",{"_index":457,"title":{},"body":{"classes/LoginDto.html":{}}}],["user.dto.ts:4",{"_index":418,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":814,"title":{},"body":{"controllers/UserController.html":{}}}],["user.name",{"_index":815,"title":{},"body":{"controllers/UserController.html":{}}}],["user.password",{"_index":968,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":802,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/entities/permission.entity",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"guards/PermissionGuard.html":{}}}],["user/entities/role.entity",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["user/entities/user.entity",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.module",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.service",{"_index":222,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["user1",{"_index":918,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.name",{"_index":919,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.password",{"_index":920,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.permissions",{"_index":922,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.roles",{"_index":955,"title":{},"body":{"injectables/UserService.html":{}}}],["user2",{"_index":935,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.name",{"_index":936,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.password",{"_index":937,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.permissions",{"_index":938,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.roles",{"_index":957,"title":{},"body":{"injectables/UserService.html":{}}}],["user:user.id",{"_index":820,"title":{},"body":{"controllers/UserController.html":{}}}],["user=await",{"_index":809,"title":{},"body":{"controllers/UserController.html":{}}}],["user_permission_relation",{"_index":765,"title":{},"body":{"entities/User.html":{}}}],["user_permissions.some((item",{"_index":615,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["user_permissions=await",{"_index":605,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["user_permissions=founduser.permissions.map(v=>v.name",{"_index":611,"title":{},"body":{"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{}}}],["user_role1",{"_index":953,"title":{},"body":{"injectables/UserService.html":{}}}],["user_role2",{"_index":956,"title":{},"body":{"injectables/UserService.html":{}}}],["user_role_relation",{"_index":767,"title":{},"body":{"entities/User.html":{}}}],["usercontroller",{"_index":774,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":813,"title":{},"body":{"controllers/UserController.html":{}}}],["userid}=await",{"_index":824,"title":{},"body":{"controllers/UserController.html":{}}}],["usermodule",{"_index":124,"title":{"modules/UserModule.html":{}},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["username:\"iwan",{"_index":238,"title":{},"body":{"controllers/AppController.html":{}}}],["userrepository",{"_index":862,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":221,"title":{"injectables/UserService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/PermissionGuard.html":{},"guards/PermissionGuard-1.html":{},"interfaces/Session-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,permissionguard",{"_index":855,"title":{},"body":{"modules/UserModule.html":{}}}],["userservice:userservice",{"_index":229,"title":{},"body":{"controllers/AppController.html":{}}}],["usevalue",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/WinstonModule.html":{}}}],["v).length",{"_index":712,"title":{},"body":{"injectables/RedisService.html":{}}}],["validate.pipe",{"_index":224,"title":{},"body":{"controllers/AppController.html":{}}}],["validatepipe",{"_index":223,"title":{"injectables/ValidatePipe.html":{}},"body":{"controllers/AppController.html":{},"injectables/ValidatePipe.html":{},"coverage.html":{}}}],["validationpipe",{"_index":801,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":423,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":694,"title":{},"body":{"injectables/RedisService.html":{},"injectables/ValidatePipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1117,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1114,"title":{},"body":{"properties.html":{}}}],["void",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogMiddleware.html":{},"classes/MyLogger.html":{}}}],["warn",{"_index":538,"title":{},"body":{"classes/MyLogger.html":{}}}],["warn(message",{"_index":546,"title":{},"body":{"classes/MyLogger.html":{}}}],["watch",{"_index":1068,"title":{},"body":{"index.html":{}}}],["website",{"_index":1098,"title":{},"body":{"index.html":{}}}],["winston",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"classes/MyLogger.html":{},"injectables/UserService.html":{},"modules/WinstonModule.html":{},"dependencies.html":{}}}],["winston/winston.module",{"_index":226,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["winston_logger",{"_index":991,"title":{},"body":{"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["winston_logger_token",{"_index":225,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmodule",{"_index":271,"title":{"modules/WinstonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["winstonmodule.forroot",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["world'})@apiresponse({status",{"_index":187,"title":{},"body":{"controllers/AppController.html":{}}}],["you'd",{"_index":1088,"title":{},"body":{"index.html":{}}}],["z0",{"_index":430,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["za",{"_index":429,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["zoom",{"_index":125,"title":{},"body":{"modules/AaaModule.html":{},"modules/AppModule.html":{},"modules/BbbModule.html":{},"modules/MapModule.html":{},"modules/PersonModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Aaa.html":{"url":"classes/Aaa.html","title":"class - Aaa","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Aaa\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/aaa/entities/aaa.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Aaa {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AaaController.html":{"url":"controllers/AaaController.html","title":"controller - AaaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AaaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/aaa/aaa.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                aaa\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAaaDto: CreateAaaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/aaa/aaa.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAaaDto\n                                            \n                                                            CreateAaaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@SetMetadata('permission', 'find_aaa')@RequirePermission('find_aaa')\n                \n            \n\n                    \n                        \n                            Defined in src/aaa/aaa.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/aaa/aaa.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/aaa/aaa.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAaaDto: UpdateAaaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/aaa/aaa.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAaaDto\n                                            \n                                                            UpdateAaaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, SetMetadata } from '@nestjs/common';\nimport { RequireLogin } from 'src/login.decorator';\nimport { LoginGuard } from 'src/login.guard_jwt';\nimport { RequirePermission } from 'src/permission.decorator';\nimport { PermissionGuard } from 'src/permission.guard';\nimport { AaaService } from './aaa.service';\nimport { CreateAaaDto } from './dto/create-aaa.dto';\nimport { UpdateAaaDto } from './dto/update-aaa.dto';\n\n@Controller('aaa')\n@RequireLogin()\n@UseGuards(LoginGuard,PermissionGuard)\nexport class AaaController {\n  constructor(private readonly aaaService: AaaService) {}\n\n  @Post()\n\n  create(@Body() createAaaDto: CreateAaaDto) {\n    return this.aaaService.create(createAaaDto);\n  }\n\n  @Get()\n  @SetMetadata(\"permission\",\"find_aaa\")\n  @RequirePermission(\"find_aaa\")\n  findAll() {\n    return this.aaaService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.aaaService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAaaDto: UpdateAaaDto) {\n    return this.aaaService.update(+id, updateAaaDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.aaaService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AaaGuard.html":{"url":"guards/AaaGuard.html","title":"guard - AaaGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AaaGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/aaa.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/aaa.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Inject, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AaaGuard implements CanActivate {\n  @Inject(Reflector)\n  private reflector: Reflector;\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const role=this.reflector.get(\"aaa\",context.getHandler());\n    console.log(role,\"role\")\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AaaModule.html":{"url":"modules/AaaModule.html","title":"module - AaaModule","body":"\n                   \n\n\n\n\n    Modules\n    AaaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AaaModule\n\n\n\ncluster_AaaModule_exports\n\n\n\ncluster_AaaModule_providers\n\n\n\ncluster_AaaModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAaaModule\n\nAaaModule\n\nAaaModule -->\n\nUserModule->AaaModule\n\n\n\n\n\nAaaService \n\nAaaService \n\nAaaService  -->\n\nAaaModule->AaaService \n\n\n\n\n\nAaaService\n\nAaaService\n\nAaaModule -->\n\nAaaService->AaaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/aaa/aaa.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AaaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AaaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AaaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { AaaService } from './aaa.service';\nimport { AaaController } from './aaa.controller';\nimport { UserModule } from 'src/user/user.module';\n\n\n// 将某一个模块设置成全局 然后导出 既可以全局使用\n@Global()\n@Module({\n  imports:[\n    UserModule,\n  ],\n  controllers: [AaaController],\n  providers: [AaaService],\n  exports:[AaaService]\n})\nexport class AaaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AaaService.html":{"url":"injectables/AaaService.html","title":"injectable - AaaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AaaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/aaa/aaa.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAaaDto: CreateAaaDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/aaa/aaa.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAaaDto\n                                            \n                                                            CreateAaaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/aaa/aaa.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/aaa/aaa.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/aaa/aaa.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAaaDto: UpdateAaaDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/aaa/aaa.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAaaDto\n                                            \n                                                            UpdateAaaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAaaDto } from './dto/create-aaa.dto';\nimport { UpdateAaaDto } from './dto/update-aaa.dto';\n\n@Injectable()\nexport class AaaService {\n  create(createAaaDto: CreateAaaDto) {\n    return 'This action adds a new aaa';\n  }\n\n  findAll() {\n    return `This action returns all aaa`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} aaa`;\n  }\n\n  update(id: number, updateAaaDto: UpdateAaaDto) {\n    return `This action updates a #${id} aaa`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} aaa`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getaaa\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAad\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getbbb\n                            \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    Async\n                                getNum\n                            \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    Async\n                                getSession\n                            \n                            \n                                    \n                                    \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getaaa\n                        \n                    \n                \n            \n            \n                \n                        \n                    getaaa(num)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('aaaa')@Aaa('admin')@UseGuards(AaaGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                num\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getAad\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAad()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('aa')@UseGuards(LoginGuard)@ApiOperation({summary: '测试 aa 接口', description: 'aaa'})@ApiResponse({status: undefined, description: 'hello world 成功', type: String})@ApiQuery({name: 'a1', type: String, description: 'a1 param', required: false, example: '1111'})@ApiQuery({name: 'a2', type: Number, description: 'a2 param', required: true, example: '222'})\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getbbb\n                        \n                    \n                \n            \n            \n                \n                        \n                    getbbb()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: '测试 bb', description: 'bb 描述'})@ApiResponse({status: undefined, description: 'bbb 成功', type: String})@ApiResponse({status: undefined, description: 'id 不合法'})@ApiParam({name: 'id', description: 'ID', required: true, example: 222})@Get('bb/:id')@UseGuards(LoginGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: '测试 /', description: 'hello world'})@ApiResponse({status: undefined, description: 'hello world 成功', type: String})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getNum\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNum(num)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('num')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                num\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile.json')@UseInterceptors(QuerypageInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSession(session)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sss')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                session\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LoginGuard)@Get('login')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpStatus,\n  Inject,\n  Logger,\n  Query,\n  Session,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport {\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n} from '@nestjs/swagger/dist';\nimport { Aaa } from './aaa.decorator';\nimport { AaaGuard } from './aaa.guard';\nimport { AaaService } from './aaa/aaa.service';\nimport { AppService } from './app.service';\nimport { LoginGuard } from './login.guard_jwt';\nimport { MyLogger } from './MyLogger';\nimport { PersonService } from './person/person.service';\nimport { QuerypageInterceptor } from './querypage.interceptor';\nimport { UserService } from './user/user.service';\nimport { ValidatePipe } from './validate.pipe';\nimport { WINSTON_LOGGER_TOKEN } from './winston/winston.module';\n\n// 控制器\n@Controller()\nexport class AppController {\n  constructor(\n    // 构造注入服务\n    private readonly appService: AppService,\n    // @Inject(\"user\") private readonly userService:UserService,\n    @Inject(AaaService) private readonly aaa: AaaService,\n  ) {}\n  @Inject(WINSTON_LOGGER_TOKEN)\n  private logger;\n  // 属性注入服务\n  @Inject(PersonService)\n  personService: PersonService;\n\n  // api\n  @ApiOperation({ summary: '测试 /', description: 'hello world' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'hello world 成功',\n    type: String,\n  })\n  @Get()\n  getHello(): string {\n    // this.userService.create({\n    //   username:\"iwan\"\n    // })\n\n    return this.appService.getHello();\n  }\n  @Get('sss')\n  async getSession(@Session() session) {\n    session.count = session.count ? session.count + 1 : 1;\n    console.log(session);\n    return session.count;\n  }\n\n  @Get('aa')\n  @UseGuards(LoginGuard)\n  @ApiOperation({ summary: '测试 aa 接口', description: 'aaa' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'hello world 成功',\n    type: String,\n  })\n  @ApiQuery({\n    name: 'a1',\n    type: String,\n    description: 'a1 param',\n    required: false,\n    example: '1111',\n  })\n  @ApiQuery({\n    name: 'a2',\n    type: Number,\n    description: 'a2 param',\n    required: true,\n    example: '222',\n  })\n  async getAad() {\n    return 'aaaa';\n  }\n\n  @ApiOperation({ summary: '测试 bb', description: 'bb 描述' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'bbb 成功',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'id 不合法'\n})\n  @ApiParam({\n    name: 'id',\n    description: 'ID',\n    required: true,\n    example: 222,\n  })\n  @Get('bb/:id')\n  @UseGuards(LoginGuard)\n  async getbbb() {\n    return 'bbbb';\n  }\n  @Get('profile.json')\n  @UseInterceptors(QuerypageInterceptor)\n  getProfile(): string {\n    // this.userService.create({\n    //   username:\"iwan\"\n    // })\n    return 'profile';\n  }\n\n  @UseGuards(LoginGuard)\n  @Get('login')\n  login(): string {\n    return 'login success';\n  }\n\n  @Get('num')\n  async getNum(@Query('num', ValidatePipe) num) {\n    console.log(num);\n    return num;\n  }\n\n  @Get('aaaa')\n  @Aaa('admin')\n  @UseGuards(AaaGuard)\n  async getaaa(@Query('num') num) {\n    this.logger.log(`get aaaa`);\n    return 'aaaa';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAaaModule\n\nAaaModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAaaModule->AppModule\n\n\n\n\n\nBbbModule\n\nBbbModule\n\nAppModule -->\n\nBbbModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nPersonModule\n\nPersonModule\n\nAppModule -->\n\nPersonModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AaaModule\n                        \n                        \n                            BbbModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            PersonModule\n                        \n                        \n                            RedisModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            WinstonModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(customer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PersonModule } from './person/person.module';\nimport { PersonService } from './person/person.service';\nimport { UserModule } from './user/user.module';\nimport { UserService } from './user/user.service';\nimport { AaaModule } from './aaa/aaa.module';\nimport { LogMiddleware } from './log.middleware';\nimport { WinstonModule } from './winston/winston.module';\nimport { transports,format } from 'winston';\nimport  * as chalk  from 'chalk';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './user/entities/user.entity';\nimport { JwtModule } from '@nestjs/jwt';\nimport { Permission } from './user/entities/permission.entity';\nimport { BbbModule } from './bbb/bbb.module';\nimport { RedisModule } from './redis/redis.module';\nimport { Role } from './user/entities/role.entity';\nimport { ConfigModule } from '@nestjs/config';\nimport  { join } from 'path';\nimport { MapModule } from './map/map.module';\n\n@Module({\n  imports: [PersonModule, UserModule, AaaModule, \n    ConfigModule.forRoot({\n      envFilePath: [join(process.cwd(), '.env')]\n    }),\n    WinstonModule.forRoot({\n      level: 'debug',\n      transports: [\n          new transports.Console({\n              format: format.combine(\n                  format.colorize(),\n                  format.printf(({context, level, message, time}) => {\n                      const appStr = chalk.green(`[NEST]`);\n                      const contextStr = chalk.yellow(`[${context}]`);\n                      return `${appStr} ${time} ${level} ${contextStr} ${message} `;\n                  })\n              ),\n          }),\n          new transports.File({\n              format: format.combine(\n                  format.timestamp(),\n                  format.json()\n              ),\n              filename: '111.log',\n              dirname: 'log'\n          })\n      ]\n  }),\n  TypeOrmModule.forRoot({\n    type: \"mysql\",\n    host: process.env.DBURI,\n    port: +process.env.DBPORT ,\n    username: process.env.DBUSER,\n    password: process.env.DBPASSWORD,\n    database:process.env.DB,\n    synchronize: true,\n    logging: true,\n    entities: [User,Permission,Role],\n    poolSize: 10, \n    connectorPackage: 'mysql2', \n    extra: {\n        authPlugin: 'sha256_password',\n    }\n  }),\n  JwtModule.register({\n    global:true,\n    secret: 'iwan',\n    signOptions: {\n      expiresIn: '3m'\n    }\n  }),\n  BbbModule,\n  RedisModule,\n  MapModule\n],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // 命名写法  provide 表示名称  useclass 表示注入的类\n    // 通过 provide 指定 token，通过 useClass 指定对象的类，Nest 会自动对它做实例化后用来注入。\n    {\n      provide: PersonService,\n      useClass: PersonService,\n    },\n    // {\n    //   provide: \"user\",\n    //   useClass: UserService,\n    // },\n    {\n      provide:\"value\",\n      useValue:{\n        name:\"iwan\",\n        age:53,\n        render(){\n          console.log(this.name)\n        }\n      }\n    }\n  ],\n})\nexport class AppModule implements NestModule {\n  configure (customer:MiddlewareConsumer){\n\n    customer.apply(LogMiddleware).forRoutes(\"profile.json\")\n   \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bbb.html":{"url":"classes/Bbb.html","title":"class - Bbb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bbb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bbb/entities/bbb.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bbb {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BbbController.html":{"url":"controllers/BbbController.html","title":"controller - BbbController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BbbController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bbb/bbb.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bbb\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBbbDto: CreateBbbDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/bbb/bbb.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBbbDto\n                                            \n                                                            CreateBbbDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@RequirePermission('find_bbb')\n                \n            \n\n                    \n                        \n                            Defined in src/bbb/bbb.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/bbb/bbb.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/bbb/bbb.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateBbbDto: UpdateBbbDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/bbb/bbb.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBbbDto\n                                            \n                                                            UpdateBbbDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { RequireLogin } from 'src/login.decorator';\nimport { LoginGuard } from 'src/login.guard_jwt';\nimport { RequirePermission } from 'src/permission.decorator';\nimport { PermissionGuard } from 'src/permission.guard';\nimport { BbbService } from './bbb.service';\nimport { CreateBbbDto } from './dto/create-bbb.dto';\nimport { UpdateBbbDto } from './dto/update-bbb.dto';\n\n@Controller('bbb')\n@RequireLogin()\n@UseGuards(LoginGuard,PermissionGuard)\nexport class BbbController {\n  constructor(private readonly bbbService: BbbService) {}\n\n  @Post()\n  create(@Body() createBbbDto: CreateBbbDto) {\n    return this.bbbService.create(createBbbDto);\n  }\n\n  @Get()\n  @RequirePermission(\"find_bbb\")\n  findAll() {\n    return this.bbbService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.bbbService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateBbbDto: UpdateBbbDto) {\n    return this.bbbService.update(+id, updateBbbDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.bbbService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BbbModule.html":{"url":"modules/BbbModule.html","title":"module - BbbModule","body":"\n                   \n\n\n\n\n    Modules\n    BbbModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BbbModule\n\n\n\ncluster_BbbModule_imports\n\n\n\ncluster_BbbModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nBbbModule\n\nBbbModule\n\nBbbModule -->\n\nUserModule->BbbModule\n\n\n\n\n\nBbbService\n\nBbbService\n\nBbbModule -->\n\nBbbService->BbbModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bbb/bbb.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BbbService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BbbController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BbbService } from './bbb.service';\nimport { BbbController } from './bbb.controller';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports:[\n    UserModule\n  ],\n  controllers: [BbbController],\n  providers: [BbbService]\n})\nexport class BbbModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BbbService.html":{"url":"injectables/BbbService.html","title":"injectable - BbbService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BbbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bbb/bbb.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBbbDto: CreateBbbDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bbb/bbb.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBbbDto\n                                            \n                                                            CreateBbbDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/bbb/bbb.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bbb/bbb.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bbb/bbb.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBbbDto: UpdateBbbDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bbb/bbb.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBbbDto\n                                            \n                                                            UpdateBbbDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBbbDto } from './dto/create-bbb.dto';\nimport { UpdateBbbDto } from './dto/update-bbb.dto';\n\n@Injectable()\nexport class BbbService {\n  create(createBbbDto: CreateBbbDto) {\n    return 'This action adds a new bbb';\n  }\n\n  findAll() {\n    return `This action returns all bbb`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} bbb`;\n  }\n\n  update(id: number, updateBbbDto: UpdateBbbDto) {\n    return `This action updates a #${id} bbb`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} bbb`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAaaDto.html":{"url":"classes/CreateAaaDto.html","title":"class - CreateAaaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAaaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/aaa/dto/create-aaa.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAaaDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBbbDto.html":{"url":"classes/CreateBbbDto.html","title":"class - CreateBbbDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBbbDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bbb/dto/create-bbb.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBbbDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePersonDto.html":{"url":"classes/CreatePersonDto.html","title":"class - CreatePersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/person/dto/create-person.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePersonDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, length, Length, Matches } from \"class-validator\";\nexport class CreateUserDto {\n    name:string\n}\n\nexport class RegisterDto {\n    @IsString()\n    @IsNotEmpty()\n    @Length(6, 30)\n    @Matches(/^[a-zA-Z0-9#$%_-]+$/, {\n        message: '用户名只能是字母、数字或者 #、$、%、_、- 这些字符'\n    })\n    name:string;\n    @IsString()\n    @IsNotEmpty()\n    @Length(6, 30)\n    password:string\n}\n\nexport class LoginDto {\n    @IsNotEmpty({\n        message:\"用户名称不能为空\",\n    })\n    @Length(1,50,{\n        message:\"字符不能为0\"\n    })\n    name:string;\n    @Length(1,50,{\n        message:\"字符不能为0\"\n    })\n    @IsNotEmpty({\n        message:\"密码不能为空\"\n    })\n    password:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogMiddleware.html":{"url":"injectables/LogMiddleware.html","title":"injectable - LogMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/log.middleware.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request } from 'express';\n\n@Injectable()\nexport class LogMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: () => void) {\n    console.log(\"before02\",req.url)\n    next();\n    console.log(\"after02\",req.url)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '用户名称不能为空'})@Length(1, 50, {message: '字符不能为0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(1, 50, {message: '字符不能为0'})@IsNotEmpty({message: '密码不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, length, Length, Matches } from \"class-validator\";\nexport class CreateUserDto {\n    name:string\n}\n\nexport class RegisterDto {\n    @IsString()\n    @IsNotEmpty()\n    @Length(6, 30)\n    @Matches(/^[a-zA-Z0-9#$%_-]+$/, {\n        message: '用户名只能是字母、数字或者 #、$、%、_、- 这些字符'\n    })\n    name:string;\n    @IsString()\n    @IsNotEmpty()\n    @Length(6, 30)\n    password:string\n}\n\nexport class LoginDto {\n    @IsNotEmpty({\n        message:\"用户名称不能为空\",\n    })\n    @Length(1,50,{\n        message:\"字符不能为0\"\n    })\n    name:string;\n    @Length(1,50,{\n        message:\"字符不能为0\"\n    })\n    @IsNotEmpty({\n        message:\"密码不能为空\"\n    })\n    password:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/login.guard_jwt.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                jwtService\n                            \n                            \n                                    \n                                    Private\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/login.guard_jwt.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt/dist';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { Role } from './user/entities/role.entity';\n\n\ndeclare module \"express\" {\n  interface Request {\n     user:{\n      nameLstring,\n      roles:Role[]\n     }\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n\n\n  @Inject(Reflector)\n  private reflector: Reflector;\n  @Inject(JwtService)\n  private jwtService: JwtService;\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n\n    const authorization = request.header('authorization') || '';\n\n    const requireLogin=this.reflector.getAllAndOverride(\"require-login\",[\n      context.getHandler(),\n      context.getClass()\n    ])\n  \n    if(!requireLogin){\n      return true;\n    }\n\n    const bearer = authorization.split(' ');\n\n    console.log(authorization,\";;;;;55555\")\n    \n    if(!bearer || bearer.length \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard-1.html":{"url":"guards/LoginGuard-1.html","title":"guard - LoginGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/login.guard_session.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/login.guard_session.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt/dist';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\n\ndeclare module 'express-session' {\n  interface Session {\n    user: {\n      name: string\n    }\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n    if(!request.session?.user){\n      throw new UnauthorizedException('用户未登录');\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MapController.html":{"url":"controllers/MapController.html","title":"controller - MapController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MapController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/map/map.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                map\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                addMap\n                            \n                            \n                                    \n                                    Async\n                                getAllGeo\n                            \n                            \n                                    \n                                    Async\n                                getPos\n                            \n                            \n                                    \n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        addMap\n                        \n                    \n                \n            \n            \n                \n                        \n                    addMap(posName: string, longitude: number, latitude: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('add')\n                \n            \n\n                    \n                        \n                            Defined in src/map/map.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                posName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                longitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                latitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllGeo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllGeo()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('allpos')\n                \n            \n\n                    \n                        \n                            Defined in src/map/map.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPos(name)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pos')\n                \n            \n\n                    \n                        \n                            Defined in src/map/map.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(radius: number, longitude: number, latitude: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('nearBySearch')\n                \n            \n\n                    \n                        \n                            Defined in src/map/map.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                radius\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                longitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                latitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Controller,\n  Get,\n  Inject,\n  Query,\n} from '@nestjs/common';\nimport { query } from 'express';\nimport { RedisService } from 'src/redis/redis.service';\n\n@Controller('map')\nexport class MapController {\n  @Inject(RedisService)\n  private redisService: RedisService;\n\n  @Get('add')\n  async addMap(\n    @Query('name') posName: string,\n    @Query('longitude') longitude: number,\n    @Query('latitude') latitude: number,\n  ) {\n    if (!posName || !longitude || !latitude) {\n      throw new BadRequestException('位置信息不全');\n    }\n\n    try {\n      await this.redisService.geoAdd('positions', posName, [\n        longitude,\n        latitude,\n      ]);\n    } catch (e) {\n      throw new BadRequestException(e.message);\n    }\n\n    return {\n      message: 'success',\n      code: 200,\n    };\n  }\n  @Get('allpos')\n  async getAllGeo() {\n    return await this.redisService.getAllGeos('positions');\n  }\n\n  @Get('pos')\n  async getPos(@Query('name') name) {\n    return await this.redisService.getPos('positions', name);\n  }\n\n  @Get('nearBySearch')\n  async search(\n    @Query('radius') radius: number,\n    @Query('longitude') longitude: number,\n    @Query('latitude') latitude: number,\n  ) {\n    if (!longitude || !latitude) {\n      throw new BadRequestException('缺少位置信息');\n    }\n    if (!radius) {\n      throw new BadRequestException('缺少搜索半径');\n    }\n\n    return this.redisService.geoSearch(\n      'positions',\n      [longitude, latitude],\n      radius,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n    Modules\n    MapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapService\n\nMapService\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/map/map.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MapService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MapController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MapController } from './map.controller';\nimport { MapService } from './map.service';\n\n@Module({\n  controllers: [MapController],\n  providers: [MapService]\n})\nexport class MapModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/map/map.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MapService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyLogger.html":{"url":"classes/MyLogger.html","title":"class - MyLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/MyLogger.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        LoggerService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options)\n                    \n                \n                        \n                            \n                                Defined in src/MyLogger.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/MyLogger.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, context: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/MyLogger.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, context: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/MyLogger.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, context: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/MyLogger.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {  LoggerService } from '@nestjs/common';\nimport { createLogger,Logger } from 'winston';\nimport * as dayjs from 'dayjs';\n\n\n\nexport class MyLogger implements LoggerService {\n    private logger: Logger;\n    constructor(options){\n        this.logger = createLogger({\n           ...options\n        });\n\n    }\n    log(message: string, context: string) {\n        const time = dayjs(Date.now()).format('YYYY-MM-DD HH:mm:ss');\n\n        this.logger.log('info', message, { context, time });\n    }\n\n    error(message: string, context: string) {\n        const time = dayjs(Date.now()).format('YYYY-MM-DD HH:mm:ss');\n\n        this.logger.log('info', message, { context, time });\n    }\n\n    warn(message: string, context: string) {\n        const time = dayjs(Date.now()).format('YYYY-MM-DD HH:mm:ss');\n\n        dayjs\n\n        this.logger.log('info', message, { context, time });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: '创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '权限备注', length: 100, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '权限名称', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: '更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Permission {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    comment: '权限名称',\n    length: 100,\n  })\n  name: string;\n\n  @Column({\n    comment: '权限备注',\n    length: 100,\n    nullable:true\n  })\n  desc: string;\n\n  @CreateDateColumn({\n    comment: '创建时间',\n  })\n  createTime: Date;\n\n  @UpdateDateColumn({\n    comment: '更新时间',\n  })\n  updateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/permission.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                redisService\n                            \n                            \n                                    \n                                    Private\n                                reflector\n                            \n                            \n                                    \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permission.guard.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { RedisService } from './redis/redis.service';\nimport { Permission } from './user/entities/permission.entity';\nimport { Role } from './user/entities/role.entity';\nimport { UserService } from './user/user.service';\n\n\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n  @Inject(UserService)\n  private userService: UserService;\n\n  @Inject(RedisService)\n  private redisService: RedisService;\n\n  @Inject(Reflector)\n  private reflector: Reflector;\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    \n    if(!request.user) {\n      return true;\n    }\n\n    const roles = await this.userService.findRolesByIds(request.user.roles.map(item => item.id))\n\n\n    const permissions: Permission[]  = roles.reduce((total, current) => {\n      total.push(...current.permissions);\n      return total;\n    }, []);\n\n    const requirePermissions=this.reflector.getAllAndOverride(\"require-permission\",[\n      context.getClass(),\n      context.getHandler(),\n    ])\n\n    if(!requirePermissions){\n      return true;\n    }\n\n\n\n    for(let permission_item of requirePermissions){\n\n      const per=permissions.find(v=>v.name===permission_item);\n\n      if(!per){\n        throw new UnauthorizedException(\"您没有该接口的访问权限\") \n      }\n\n    }\n\n\n\n    return true;\n\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard-1.html":{"url":"guards/PermissionGuard-1.html","title":"guard - PermissionGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/permission.guard_acl.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                redisService\n                            \n                            \n                                    \n                                    Private\n                                reflector\n                            \n                            \n                                    \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permission.guard_acl.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { RedisService } from './redis/redis.service';\nimport { UserService } from './user/user.service';\n\ndeclare module 'express-session' {\n  interface Session {\n    user: {\n      name: string;\n    };\n  }\n}\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n  @Inject(UserService)\n  private userService: UserService;\n\n  @Inject(RedisService)\n  private redisService: RedisService;\n\n  @Inject(Reflector)\n  private reflector: Reflector;\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    const user = request?.session.user;\n    \n    if (!user) {\n      throw new UnauthorizedException('用户未登录');\n    }\n\n    // 查询redis中用户的权限\n\n    console.log(`user_${user.name}_permissions`)\n     let user_permissions=await this.redisService.listGet(`user_${user.name}_permissions`)\n     console.log(user_permissions,'redis')\n\n\n    //  如果redis中没有用户权限记录 就从数据库获取 然后 存储到redis里面\n     if(user_permissions.length===0){\n          // 根据session 获取用户信息\n          const foundUser = await this.userService.findByUsername(user.name);\n          user_permissions=foundUser.permissions.map(v=>v.name);\n          this.redisService.listSet(`user_${user.name}_permissions`,user_permissions,60 * 30)\n     }\n\n     console.log(user_permissions)\n\n    // 查询接口权限 然后在用户权限中查找是否有这个权限\n    const permission = this.reflector.get('permission', context.getHandler());\n    if (user_permissions.some((item) => item === permission)) {\n      return true;\n    } else {\n      throw new UnauthorizedException('没有权限访问该接口');\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/person/entities/person.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Person {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PersonController.html":{"url":"controllers/PersonController.html","title":"controller - PersonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PersonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/person/person.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                person\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPersonDto: CreatePersonDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/person/person.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPersonDto\n                                            \n                                                            CreatePersonDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/person/person.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/person/person.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/person/person.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePersonDto: UpdatePersonDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/person/person.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePersonDto\n                                            \n                                                            UpdatePersonDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { PersonService } from './person.service';\nimport { CreatePersonDto } from './dto/create-person.dto';\nimport { UpdatePersonDto } from './dto/update-person.dto';\n\n@Controller('person')\nexport class PersonController {\n  constructor(private readonly personService: PersonService) {}\n\n  @Post()\n  create(@Body() createPersonDto: CreatePersonDto) {\n    return this.personService.create(createPersonDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.personService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.personService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePersonDto: UpdatePersonDto) {\n    return this.personService.update(+id, updatePersonDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.personService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonModule.html":{"url":"modules/PersonModule.html","title":"module - PersonModule","body":"\n                   \n\n\n\n\n    Modules\n    PersonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PersonModule\n\n\n\ncluster_PersonModule_providers\n\n\n\n\nPersonService\n\nPersonService\n\n\n\nPersonModule\n\nPersonModule\n\nPersonModule -->\n\nPersonService->PersonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/person/person.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PersonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PersonController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PersonService } from './person.service';\nimport { PersonController } from './person.controller';\n\n@Module({\n  controllers: [PersonController],\n  providers: [PersonService]\n})\nexport class PersonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonService.html":{"url":"injectables/PersonService.html","title":"injectable - PersonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/person/person.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPersonDto: CreatePersonDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/person/person.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPersonDto\n                                            \n                                                            CreatePersonDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/person/person.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/person/person.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/person/person.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePersonDto: UpdatePersonDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/person/person.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePersonDto\n                                            \n                                                            UpdatePersonDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePersonDto } from './dto/create-person.dto';\nimport { UpdatePersonDto } from './dto/update-person.dto';\n\n@Injectable()\nexport class PersonService {\n  create(createPersonDto: CreatePersonDto) {\n    return 'This action adds a new person';\n  }\n\n  findAll() {\n    return `This action returns all person`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} person`;\n  }\n\n  update(id: number, updatePersonDto: UpdatePersonDto) {\n    return `This action updates a #${id} person`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} person`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuerypageInterceptor.html":{"url":"injectables/QuerypageInterceptor.html","title":"injectable - QuerypageInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuerypageInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/querypage.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/querypage.interceptor.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable()\nexport class QuerypageInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log(context.getHandler())\n\n\n    // 后面我们会在 controller 和 handler 上加一些 metadata，这种就只有 interceptor或者 guard 里可以取出来，middleware 不行。\n    let startTime=Date.now()\n    // Pipe 是管道的意思，用来对参数做一些检验和转换：\n    return next.handle().pipe(\n       tap(()=>{\n          console.log('time: ', Date.now() - startTime)\n       })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_RedisModule_exports\n\n\n\n\nRedisService \n\nRedisService \n\n\n\nRedisModule\n\nRedisModule\n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/redis/redis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RedisService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RedisService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { createClient } from 'redis';\nimport { RedisService } from './redis.service';\n\n@Global()\n@Module({\n  providers: [\n    RedisService,\n    {\n      provide: 'REDIS_CLIENT',\n      async useFactory() {\n        const client = createClient({\n          socket: {\n            host: 'localhost',\n            port: 6379,\n          },\n        });\n        await client.connect();\n        return client;\n      },\n    },\n  ],\n  exports:[RedisService]\n})\nexport class RedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisService.html":{"url":"injectables/RedisService.html","title":"injectable - RedisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/redis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                redisClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                geoAdd\n                            \n                            \n                                    Async\n                                geoSearch\n                            \n                            \n                                    Async\n                                getAllGeos\n                            \n                            \n                                    Async\n                                getPos\n                            \n                            \n                                    Async\n                                listGet\n                            \n                            \n                                    Async\n                                listSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        geoAdd\n                        \n                    \n                \n            \n            \n                \n                        \n                    geoAdd(key: string, posName: string, postions: [number, number])\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                posName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                postions\n                                            \n                                                        [number, number]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        geoSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    geoSearch(key: string, pos: [number, number], radius: number, unit: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pos\n                                            \n                                                        [number, number]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                radius\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                unit\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"km\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllGeos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllGeos(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPos(key: string, posName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                posName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    listGet(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listSet\n                        \n                    \n                \n            \n            \n                \n                        \n                    listSet(key: string, list, ttl: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                list\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        redisClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RedisClientType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject('REDIS_CLIENT')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/redis/redis.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { RedisClientType } from 'redis';\n@Injectable()\nexport class RedisService {\n    @Inject('REDIS_CLIENT') \n    private redisClient: RedisClientType\n\n    // 获取list\n    async listGet(key:string){\n        return await this.redisClient.lRange(key,0,-1)\n    }\n\n\n\n    // 添加list\n    async listSet(key:string,list,ttl:number){\n        for(let i = 0; i v).length){\n            throw new BadRequestException(\"地理位置不存在\")\n        }\n        return {\n            name:posName,\n            longitude:res[0]?.longitude,\n            latitude:res[0]?.latitude\n        }\n    }\n    async getAllGeos(key:string){\n        const positions=await this.redisClient.zRange(key,0,-1);\n        let list=[];\n        for(let pos of positions){\n            const res=await this.getPos(key,pos)\n            list.push(res)\n        }\n        return list;\n    }\n\n    async geoSearch(key:string,pos:[number,number],radius:number,unit:any=\"km\"){\n        const positions=await this.redisClient.geoRadius(key,{\n            longitude:pos[0],\n            latitude:pos[1]\n        },radius,unit)\n\n        let list=[];\n        for(let pos of positions){\n            const res=await this.getPos(key,pos)\n            list.push(res)\n        }\n        return list;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Length(6, 30)@Matches(/^[a-zA-Z0-9#$%_-]+$/, {message: '用户名只能是字母、数字或者 #、$、%、_、- 这些字符'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Length(6, 30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, length, Length, Matches } from \"class-validator\";\nexport class CreateUserDto {\n    name:string\n}\n\nexport class RegisterDto {\n    @IsString()\n    @IsNotEmpty()\n    @Length(6, 30)\n    @Matches(/^[a-zA-Z0-9#$%_-]+$/, {\n        message: '用户名只能是字母、数字或者 #、$、%、_、- 这些字符'\n    })\n    name:string;\n    @IsString()\n    @IsNotEmpty()\n    @Length(6, 30)\n    password:string\n}\n\nexport class LoginDto {\n    @IsNotEmpty({\n        message:\"用户名称不能为空\",\n    })\n    @Length(1,50,{\n        message:\"字符不能为0\"\n    })\n    name:string;\n    @Length(1,50,{\n        message:\"字符不能为0\"\n    })\n    @IsNotEmpty({\n        message:\"密码不能为空\"\n    })\n    password:string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login.guard_jwt.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CanActivate, ExecutionContext, Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt/dist';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { Role } from './user/entities/role.entity';\n\n\ndeclare module \"express\" {\n  interface Request {\n     user:{\n      nameLstring,\n      roles:Role[]\n     }\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n\n\n  @Inject(Reflector)\n  private reflector: Reflector;\n  @Inject(JwtService)\n  private jwtService: JwtService;\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n\n    const authorization = request.header('authorization') || '';\n\n    const requireLogin=this.reflector.getAllAndOverride(\"require-login\",[\n      context.getHandler(),\n      context.getClass()\n    ])\n  \n    if(!requireLogin){\n      return true;\n    }\n\n    const bearer = authorization.split(' ');\n\n    console.log(authorization,\";;;;;55555\")\n    \n    if(!bearer || bearer.length \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '备注', length: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'role_permission_relation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinTable, ManyToMany, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { Permission } from \"./permission.entity\";\n\n\n\n@Entity()\nexport class Role {\n    @PrimaryGeneratedColumn()\n    id:number\n\n    @Column({\n        comment:\"备注\",\n        length: 20\n    })\n    name:string\n\n    \n   \n    @CreateDateColumn()\n    createTime: Date;\n\n    @UpdateDateColumn()\n    updateTime: Date;\n\n    @ManyToMany(() => Permission)\n    @JoinTable({\n        name: 'role_permission_relation'\n    })\n    permissions: Permission[] \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login.guard_session.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CanActivate, ExecutionContext, Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt/dist';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\n\ndeclare module 'express-session' {\n  interface Session {\n    user: {\n      name: string\n    }\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n    if(!request.session?.user){\n      throw new UnauthorizedException('用户未登录');\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session-1.html":{"url":"interfaces/Session-1.html","title":"interface - Session-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission.guard_acl.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { RedisService } from './redis/redis.service';\nimport { UserService } from './user/user.service';\n\ndeclare module 'express-session' {\n  interface Session {\n    user: {\n      name: string;\n    };\n  }\n}\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n  @Inject(UserService)\n  private userService: UserService;\n\n  @Inject(RedisService)\n  private redisService: RedisService;\n\n  @Inject(Reflector)\n  private reflector: Reflector;\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    const user = request?.session.user;\n    \n    if (!user) {\n      throw new UnauthorizedException('用户未登录');\n    }\n\n    // 查询redis中用户的权限\n\n    console.log(`user_${user.name}_permissions`)\n     let user_permissions=await this.redisService.listGet(`user_${user.name}_permissions`)\n     console.log(user_permissions,'redis')\n\n\n    //  如果redis中没有用户权限记录 就从数据库获取 然后 存储到redis里面\n     if(user_permissions.length===0){\n          // 根据session 获取用户信息\n          const foundUser = await this.userService.findByUsername(user.name);\n          user_permissions=foundUser.permissions.map(v=>v.name);\n          this.redisService.listSet(`user_${user.name}_permissions`,user_permissions,60 * 30)\n     }\n\n     console.log(user_permissions)\n\n    // 查询接口权限 然后在用户权限中查找是否有这个权限\n    const permission = this.reflector.get('permission', context.getHandler());\n    if (user_permissions.some((item) => item === permission)) {\n      return true;\n    } else {\n      throw new UnauthorizedException('没有权限访问该接口');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAaaDto.html":{"url":"classes/UpdateAaaDto.html","title":"class - UpdateAaaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAaaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/aaa/dto/update-aaa.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAaaDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAaaDto } from './create-aaa.dto';\n\nexport class UpdateAaaDto extends PartialType(CreateAaaDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBbbDto.html":{"url":"classes/UpdateBbbDto.html","title":"class - UpdateBbbDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBbbDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bbb/dto/update-bbb.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateBbbDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBbbDto } from './create-bbb.dto';\n\nexport class UpdateBbbDto extends PartialType(CreateBbbDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePersonDto.html":{"url":"classes/UpdatePersonDto.html","title":"class - UpdatePersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/person/dto/update-person.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePersonDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePersonDto } from './create-person.dto';\n\nexport class UpdatePersonDto extends PartialType(CreatePersonDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                updateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: '创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '姓名', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '密码', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'user_permission_relation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'user_role_relation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: '更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinTable, ManyToMany, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { Permission } from \"./permission.entity\";\nimport { Role } from \"./role.entity\";\n\n\n@Entity()\nexport class User {\n    @PrimaryGeneratedColumn()\n    id:number\n\n    @Column({\n        comment:\"姓名\",\n        length:100\n    })\n    name:string\n\n    @Column({\n        comment:\"密码\",\n        length:100\n    })\n    password:string\n\n    @CreateDateColumn({\n        comment: '创建时间'\n    })\n    createTime: Date;\n\n    @UpdateDateColumn({\n        comment: '更新时间'\n    })\n    updateTime: Date;\n    // @CreateDateColumn 会在第一次保存的时候设置一个时间戳，之后一直不变。\n    // 而 @UpdateDateColumn 则是每次更新都会修改这个时间戳。\n\n    @ManyToMany(()=>Permission)\n    @JoinTable({\n        name: 'user_permission_relation'\n    })\n    permissions:Permission[]\n\n\n    @ManyToMany(() => Role)\n    @JoinTable({\n        name: 'user_role_relation'\n    })\n    roles: Role[] \n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    Async\n                                done\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                jwtlogin\n                            \n                            \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    Async\n                                sesstion_login\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        done\n                        \n                    \n                \n            \n            \n                \n                        \n                    done()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('done')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        jwtlogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    jwtlogin(body: LoginDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(body: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sesstion_login\n                        \n                    \n                \n            \n            \n                \n                        \n                    sesstion_login(body: LoginDto, session)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('session_login')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Res, ValidationPipe, Session, Query, UnauthorizedException } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto, LoginDto, RegisterDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Response } from 'express';\nimport { JwtService } from '@nestjs/jwt';\n\n@Controller('user')\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private jwtService:JwtService\n    \n    ) {}\n\n  @Post(\"login\")\n  async jwtlogin(@Body(ValidationPipe) body:LoginDto,@Res({passthrough:true}) res:Response){\n    const user=await this.userService.login(body); \n      const access_token = this.jwtService.sign({\n        userId: user.id,\n        username: user.name,\n      }, {\n        expiresIn: '30m'\n      });\n  \n      const refresh_token = this.jwtService.sign({\n        userId: user.id\n      }, {\n        expiresIn: '7d'\n      });\n      \n      res.setHeader('authorzation', `bearer ${access_token}`);\n\n      return {\n        access_token,\n        refresh_token,\n        user:user.id\n      }\n     \n\n  }\n\n  @Get(\"refresh\")\n  async refreshToken(@Query(\"refresh_token\") refreshToken:string){\n\n    try{\n      const {userId}=await this.jwtService.verify(refreshToken);\n    const user=await this.userService.findOne(userId);\n    const access_token = this.jwtService.sign({\n      userId: user.id,\n      username: user.name,\n    }, {\n      expiresIn: '30m'\n    });\n\n    const refresh_token = this.jwtService.sign({\n      userId: user.id\n    }, {\n      expiresIn: '7d'\n    });\n\n    return {\n      access_token,\n      refresh_token,\n    }\n    }catch(e){\n      throw new UnauthorizedException(\"token 已失效，请重新登录\")\n    }\n    \n\n\n  }\n\n  @Post(\"session_login\")\n  async sesstion_login(@Body(ValidationPipe) body:LoginDto,@Session() session){\n    console.log(body)\n    const user=await this.userService.login(body); \n    session.user = {\n      name: user.name\n    }\n    return \"success\"\n  }\n\n \n\n  @Post(\"register\")\n  async register(@Body(ValidationPipe) body:RegisterDto){\n    return await this.userService.register(body);\n    \n  }\n\n  @Get(\"done\")\n  async done(){\n     await this.userService.initData2();\n     return \"done\"\n  }\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nPermissionGuard \n\nPermissionGuard \n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nPermissionGuard  -->\n\nUserModule->PermissionGuard \n\n\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PermissionGuard\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm/dist/typeorm.module';\nimport { User } from './entities/user.entity';\nimport { Permission } from './entities/permission.entity';\nimport { PermissionGuard } from 'src/permission.guard';\nimport { Role } from './entities/role.entity';\n\n@Module({\n  imports:[\n    TypeOrmModule.forFeature([\n      User,\n      Permission,\n      Role\n    ])\n  ],\n  controllers: [UserController],\n  providers: [UserService,PermissionGuard],\n  exports:[UserService,PermissionGuard]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                logger\n                            \n                            \n                                    \n                                    Private\n                                manager\n                            \n                            \n                                    \n                                    Public\n                                permissionRepository\n                            \n                            \n                                    \n                                    Public\n                                roleRepository\n                            \n                            \n                                    \n                                    Public\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findRolesByIds\n                            \n                            \n                                    Async\n                                initData\n                            \n                            \n                                    Async\n                                initData2\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findRolesByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRolesByIds(roles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roles\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initData2\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData2()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(body: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(body: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(WINSTON_LOGGER_TOKEN)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityManager\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectEntityManager()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        permissionRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(Permission)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        roleRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(User)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Inject, Injectable } from '@nestjs/common';\nimport { InjectEntityManager } from '@nestjs/typeorm/dist';\nimport { InjectRepository } from '@nestjs/typeorm/dist/common';\nimport { EntityManager, In, Like, Repository } from 'typeorm';\nimport { CreateUserDto, LoginDto, RegisterDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as crypto from 'crypto';\nimport { Logger } from 'winston';\nimport { MyLogger } from 'src/MyLogger';\nimport { WINSTON_LOGGER_TOKEN } from 'src/winston/winston.module';\nimport { Permission } from './entities/permission.entity';\nimport { Role } from './entities/role.entity';\n\nfunction md5(str) {\n  const hash = crypto.createHash('md5');\n  hash.update(str);\n  return hash.digest('hex');\n}\n\n@Injectable()\nexport class UserService {\n  @InjectEntityManager()\n  private manager: EntityManager;\n\n  @Inject(WINSTON_LOGGER_TOKEN)\n  logger: Logger;\n\n  @InjectRepository(User)\n  public userRepository: Repository;\n  @InjectRepository(Permission)\n  public permissionRepository: Repository;\n\n  @InjectRepository(Role)\n  public roleRepository: Repository;\n\n  create(createUserDto: CreateUserDto) {\n    return this.userRepository.save(createUserDto);\n  }\n\n  async initData() {\n    const pe1 = new Permission();\n    pe1.desc = '查询_aaa';\n    pe1.name = 'find_aaa';\n    const pe2 = new Permission();\n    pe2.desc = '编辑_aaa';\n    pe2.name = 'edit_aaa';\n    const pe3 = new Permission();\n    pe3.desc = '删除_aaa';\n    pe3.name = 'remove_aaa';\n\n    const user1 = new User();\n    user1.name = '用户aaa';\n    user1.password = '123456';\n    user1.permissions = [pe1, pe2, pe3];\n    const pe4 = new Permission();\n    pe4.desc = '查询_bbb';\n    pe4.name = 'find_bbb';\n    const pe5 = new Permission();\n    pe5.desc = '编辑_bbb';\n    pe5.name = 'edit_bbb';\n    const pe6 = new Permission();\n    pe6.desc = '删除_bbb';\n    pe6.name = 'remove_aaa';\n\n    const user2 = new User();\n\n    user2.name = '用户bbb';\n    user2.password = '123456';\n    user2.permissions = [pe4, pe5, pe6];\n    await this.permissionRepository.save([pe1, pe2, pe3, pe4, pe5, pe6]);\n\n    await this.userRepository.save([user1, user2]);\n  }\n\n  async initData2() {\n    const role1 = new Role();\n\n    role1.name = 'admin';\n\n    role1.permissions = await this.permissionRepository.find({});\n\n    const role2 = new Role();\n    role2.name = 'user';\n    role2.permissions = await this.permissionRepository.find({\n      where: {\n        name: Like('%aaa'),\n      },\n    });\n\n    console.log(role1, 'role1');\n    console.log(role2, 'role2');\n\n    await this.roleRepository.save([role1, role2]);\n\n    const user1 = new User();\n    user1.name = 'user_role1';\n    user1.password = 'e10adc3949ba59abbe56e057f20f883e';\n    user1.roles = [role1];\n\n    const user2 = new User();\n    user2.name = 'user_role2';\n    user2.password = 'e10adc3949ba59abbe56e057f20f883e';\n    user2.roles = [role2];\n\n    await this.userRepository.save([user1, user2]);\n  }\n\n  findAll() {\n    return this.userRepository.find();\n  }\n\n  findOne(id: number) {\n    return this.userRepository.findOne({\n      where: {\n        id,\n      },\n    });\n  }\n\n  async findRolesByIds(roles) {\n    return await this.roleRepository.find({\n      where: {\n        id: In(roles),\n      },\n      relations:{\n        permissions:true\n      }\n    });\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return this.userRepository.save({\n      id,\n      ...updateUserDto,\n    });\n  }\n\n  remove(id: number) {\n    return this.userRepository.delete(id);\n  }\n\n  async findByUsername(name: string) {\n    const user = await this.userRepository.findOne({\n      where: {\n        name,\n      },\n      relations: {\n        permissions: true,\n        roles: true,\n      },\n    });\n    return user;\n  }\n\n  async login(body: LoginDto) {\n    console.log('body01');\n    const user = await this.userRepository.findOne({\n      where: {\n        name: body.name,\n      },\n      relations: {\n        roles: true,\n      },\n    });\n    if (!user) {\n      throw new HttpException('用户不存在', 200);\n    }\n\n    if (user.password !== md5(body.password)) {\n      throw new HttpException('密码错误', 200);\n    }\n    \n    return user;\n  }\n  async register(body: RegisterDto) {\n    const user = await this.userRepository.findOne({\n      where: {\n        name: body.name,\n      },\n    });\n\n    if (user) {\n      throw new HttpException('用户已存在', 200);\n    }\n\n    const newUser = new User();\n    newUser.name = body.name;\n    newUser.password = md5(body.password);\n    try {\n      await this.userRepository.save(newUser);\n      return '注册成功';\n    } catch (e) {\n      this.logger.error(e, UserService);\n      return '注册失败';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidatePipe.html":{"url":"injectables/ValidatePipe.html","title":"injectable - ValidatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validate.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validate.pipe.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\n\n@Injectable()\nexport class ValidatePipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n\n    if(Number.isNaN(parseInt(value))) {\n      throw new BadRequestException(`参数${metadata.data}错误`)\n    }\n\n    // 这里的 value 就是传入的参数，如果不能转成数字，就返回参数错误，否则乘 10 再传入 \n\n    return typeof value === 'number' ? value * 10 : parseInt(value) * 10;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WinstonModule.html":{"url":"modules/WinstonModule.html","title":"module - WinstonModule","body":"\n                   \n\n\n\n\n    Modules\n    WinstonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/winston/winston.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: LoggerOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/winston/winston.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        LoggerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { module: typeof WinstonModule; providers: {}; exports: {}; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MyLogger } from 'src/MyLogger';\nimport {LoggerOptions } from 'winston';\n\nexport const WINSTON_LOGGER_TOKEN = 'WINSTON_LOGGER';\n\n@Global()\n@Module({\n\n})\nexport class WinstonModule {\n    \n    public static forRoot(options:LoggerOptions){\n        return {\n            module: WinstonModule,\n            providers: [\n                {\n                    provide: WINSTON_LOGGER_TOKEN,\n                    useValue: new MyLogger(options)\n                }\n            ],\n            exports: [\n                WINSTON_LOGGER_TOKEN\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/MyLogger.ts\n            \n            class\n            MyLogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/aaa.decorator.ts\n            \n            variable\n            Aaa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/aaa.guard.ts\n            \n            guard\n            AaaGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/aaa/aaa.controller.ts\n            \n            controller\n            AaaController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/aaa/aaa.service.ts\n            \n            injectable\n            AaaService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/aaa/dto/create-aaa.dto.ts\n            \n            class\n            CreateAaaDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/aaa/dto/update-aaa.dto.ts\n            \n            class\n            UpdateAaaDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/aaa/entities/aaa.entity.ts\n            \n            class\n            Aaa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/bbb/bbb.controller.ts\n            \n            controller\n            BbbController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/bbb/bbb.service.ts\n            \n            injectable\n            BbbService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/bbb/dto/create-bbb.dto.ts\n            \n            class\n            CreateBbbDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bbb/dto/update-bbb.dto.ts\n            \n            class\n            UpdateBbbDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bbb/entities/bbb.entity.ts\n            \n            class\n            Bbb\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/log.middleware.ts\n            \n            injectable\n            LogMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/login.decorator.ts\n            \n            variable\n            RequireLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/login.guard_jwt.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/login.guard_jwt.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/login.guard_session.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/login.guard_session.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/map/map.controller.ts\n            \n            controller\n            MapController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/map/map.service.ts\n            \n            injectable\n            MapService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permission.decorator.ts\n            \n            variable\n            RequirePermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permission.guard.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permission.guard_acl.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/permission.guard_acl.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/person/dto/create-person.dto.ts\n            \n            class\n            CreatePersonDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/person/dto/update-person.dto.ts\n            \n            class\n            UpdatePersonDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/person/entities/person.entity.ts\n            \n            class\n            Person\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/person/person.controller.ts\n            \n            controller\n            PersonController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/person/person.service.ts\n            \n            injectable\n            PersonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/querypage.interceptor.ts\n            \n            injectable\n            QuerypageInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/redis/redis.service.ts\n            \n            injectable\n            RedisService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/permission.entity.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            function\n            md5\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validate.pipe.ts\n            \n            injectable\n            ValidatePipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/winston/winston.module.ts\n            \n            variable\n            WINSTON_LOGGER_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^7.1.17\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            @types/express-session : ^1.17.10\n        \n            chalk : 4.1.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dayjs : ^1.11.10\n        \n            express-session : ^1.17.3\n        \n            mysql2 : ^3.6.5\n        \n            redis : ^4.6.12\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.17\n        \n            winston : ^3.11.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            md5   (src/.../user.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/user/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        md5\n                        \n                    \n                \n            \n            \n                \nmd5(str)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AaaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BbbModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WinstonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AaaModule\n\n\n\ncluster_AaaModule_imports\n\n\n\ncluster_AaaModule_exports\n\n\n\ncluster_AaaModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BbbModule\n\n\n\ncluster_BbbModule_providers\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_PersonModule\n\n\n\ncluster_PersonModule_providers\n\n\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAaaModule\n\nAaaModule\n\nAaaModule -->\n\nUserModule->AaaModule\n\n\n\n\n\nBbbModule\n\nBbbModule\n\nBbbModule -->\n\nUserModule->BbbModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nPermissionGuard \n\nPermissionGuard \n\nPermissionGuard  -->\n\nUserModule->PermissionGuard \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAaaService \n\nAaaService \n\nAaaService  -->\n\nAaaModule->AaaService \n\n\n\nAppModule -->\n\nAaaModule->AppModule\n\n\n\n\n\nAaaService\n\nAaaService\n\nAaaModule -->\n\nAaaService->AaaModule\n\n\n\nAppModule -->\n\nBbbModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nPersonModule\n\nPersonModule\n\nAppModule -->\n\nPersonModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nRedisService \n\nRedisService \n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBbbService\n\nBbbService\n\nBbbModule -->\n\nBbbService->BbbModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nPersonService\n\nPersonService\n\nPersonModule -->\n\nPersonService->PersonModule\n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aaa   (src/.../aaa.decorator.ts)\n                        \n                        \n                            RequireLogin   (src/.../login.decorator.ts)\n                        \n                        \n                            RequirePermission   (src/.../permission.decorator.ts)\n                        \n                        \n                            WINSTON_LOGGER_TOKEN   (src/.../winston.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/aaa.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Aaa\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...args: string[]) => SetMetadata('aaa', args)\n                    \n                \n\n\n        \n    \n\n    src/login.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequireLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata('require-login', true)\n                    \n                \n\n\n        \n    \n\n    src/permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequirePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...permissions: string[]) => SetMetadata('require-permission', permissions)\n                    \n                \n\n\n        \n    \n\n    src/winston/winston.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WINSTON_LOGGER_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'WINSTON_LOGGER'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
